{"ast":null,"code":"import React from'react';import{HStack,VStack,Text,Circle,Box,Progress,useColorModeValue}from'@chakra-ui/react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProgressIndicator=_ref=>{let{currentStep,completedSteps}=_ref;const activeColor=useColorModeValue('teal.500','teal.300');const completedColor=useColorModeValue('green.500','green.300');const inactiveColor=useColorModeValue('gray.300','gray.600');const activeBg=useColorModeValue('teal.50','teal.900');const steps=[{id:'goal',label:'목표설정',emoji:'🎯'},{id:'budget',label:'예산설정',emoji:'💰'},{id:'basic_info',label:'기본정보',emoji:'👤'}];const currentStepIndex=steps.findIndex(step=>step.id===currentStep);const progressPercentage=(currentStepIndex+1)/steps.length*100;const getStepStatus=stepId=>{if(completedSteps.includes(stepId))return'completed';if(stepId===currentStep)return'active';return'inactive';};const getStepColor=status=>{switch(status){case'completed':return completedColor;case'active':return activeColor;default:return inactiveColor;}};return/*#__PURE__*/_jsxs(VStack,{spacing:4,w:\"full\",children:[/*#__PURE__*/_jsxs(Box,{w:\"full\",px:4,children:[/*#__PURE__*/_jsx(Progress,{value:progressPercentage,colorScheme:\"teal\",size:\"sm\",borderRadius:\"full\",bg:\"gray.100\"}),/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",mt:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.500\",children:\"\\uC2DC\\uC791\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"gray.500\",children:[Math.round(progressPercentage),\"% \\uC644\\uB8CC\"]}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.500\",children:\"\\uC644\\uB8CC\"})]})]}),/*#__PURE__*/_jsx(HStack,{spacing:0,justify:\"space-between\",w:\"full\",px:4,children:steps.map((step,index)=>{const status=getStepStatus(step.id);const isActive=status==='active';const isCompleted=status==='completed';return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(VStack,{spacing:2,flex:1,children:[/*#__PURE__*/_jsx(Circle,{size:isActive?\"12\":\"10\",bg:isActive?activeBg:'transparent',color:getStepColor(status),borderWidth:isActive?\"2px\":\"1px\",borderColor:getStepColor(status),transition:\"all 0.2s\",position:\"relative\",children:isCompleted?/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\u2713\"}):/*#__PURE__*/_jsx(Text,{fontSize:isActive?\"lg\":\"md\",children:step.emoji})}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:getStepColor(status),fontWeight:isActive?\"bold\":\"normal\",textAlign:\"center\",lineHeight:\"1.2\",children:step.label})]}),index<steps.length-1&&/*#__PURE__*/_jsx(Box,{flex:1,height:\"1px\",bg:completedSteps.includes(steps[index+1].id)||isCompleted&&steps[index+1].id===currentStep?completedColor:inactiveColor,mx:2,mt:-4})]},step.id);})}),/*#__PURE__*/_jsx(Box,{textAlign:\"center\",px:4,children:/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"gray.600\",children:[currentStep==='gender'&&'성별을 선택해주세요',currentStep==='body_metrics'&&'키, 몸무게, 나이를 입력해주세요',currentStep==='goal'&&'원하는 목표를 선택해주세요',currentStep==='activity'&&'평소 활동량을 선택해주세요',currentStep==='calories'&&'계산된 칼로리를 확인해주세요',currentStep==='budget'&&'한 달 식비 예산을 설정해주세요']})})]});};export default ProgressIndicator;","map":{"version":3,"names":["React","HStack","VStack","Text","Circle","Box","Progress","useColorModeValue","jsx","_jsx","jsxs","_jsxs","ProgressIndicator","_ref","currentStep","completedSteps","activeColor","completedColor","inactiveColor","activeBg","steps","id","label","emoji","currentStepIndex","findIndex","step","progressPercentage","length","getStepStatus","stepId","includes","getStepColor","status","spacing","w","children","px","value","colorScheme","size","borderRadius","bg","justify","mt","fontSize","color","Math","round","map","index","isActive","isCompleted","Fragment","flex","borderWidth","borderColor","transition","position","fontWeight","textAlign","lineHeight","height","mx"],"sources":["/Users/kim_seung_bin/Desktop/ksb/public/dev/kkssbbb-github-repo/SmartMealPlanner_front/src/components/Onboarding/ProgressIndicator.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  HStack,\n  VStack,\n  Text,\n  Circle,\n  Box,\n  Progress,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { OnboardingStep } from '../../types';\n\ninterface ProgressIndicatorProps {\n  currentStep: OnboardingStep;\n  completedSteps: OnboardingStep[];\n}\n\nconst ProgressIndicator: React.FC<ProgressIndicatorProps> = ({\n  currentStep,\n  completedSteps,\n}) => {\n  const activeColor = useColorModeValue('teal.500', 'teal.300');\n  const completedColor = useColorModeValue('green.500', 'green.300');\n  const inactiveColor = useColorModeValue('gray.300', 'gray.600');\n  const activeBg = useColorModeValue('teal.50', 'teal.900');\n\n  const steps = [\n    { id: 'goal', label: '목표설정', emoji: '🎯' },\n    { id: 'budget', label: '예산설정', emoji: '💰' },\n    { id: 'basic_info', label: '기본정보', emoji: '👤' },\n  ] as const;\n\n  const currentStepIndex = steps.findIndex(step => step.id === currentStep);\n  const progressPercentage = ((currentStepIndex + 1) / steps.length) * 100;\n\n  const getStepStatus = (stepId: OnboardingStep) => {\n    if (completedSteps.includes(stepId)) return 'completed';\n    if (stepId === currentStep) return 'active';\n    return 'inactive';\n  };\n\n  const getStepColor = (status: string) => {\n    switch (status) {\n      case 'completed': return completedColor;\n      case 'active': return activeColor;\n      default: return inactiveColor;\n    }\n  };\n\n  return (\n    <VStack spacing={4} w=\"full\">\n      {/* Progress Bar */}\n      <Box w=\"full\" px={4}>\n        <Progress\n          value={progressPercentage}\n          colorScheme=\"teal\"\n          size=\"sm\"\n          borderRadius=\"full\"\n          bg=\"gray.100\"\n        />\n        <HStack justify=\"space-between\" mt={2}>\n          <Text fontSize=\"xs\" color=\"gray.500\">\n            시작\n          </Text>\n          <Text fontSize=\"xs\" color=\"gray.500\">\n            {Math.round(progressPercentage)}% 완료\n          </Text>\n          <Text fontSize=\"xs\" color=\"gray.500\">\n            완료\n          </Text>\n        </HStack>\n      </Box>\n\n      {/* Step Indicators */}\n      <HStack spacing={0} justify=\"space-between\" w=\"full\" px={4}>\n        {steps.map((step, index) => {\n          const status = getStepStatus(step.id);\n          const isActive = status === 'active';\n          const isCompleted = status === 'completed';\n\n          return (\n            <React.Fragment key={step.id}>\n              <VStack spacing={2} flex={1}>\n                <Circle\n                  size={isActive ? \"12\" : \"10\"}\n                  bg={isActive ? activeBg : 'transparent'}\n                  color={getStepColor(status)}\n                  borderWidth={isActive ? \"2px\" : \"1px\"}\n                  borderColor={getStepColor(status)}\n                  transition=\"all 0.2s\"\n                  position=\"relative\"\n                >\n                  {isCompleted ? (\n                    <Text fontSize=\"lg\">✓</Text>\n                  ) : (\n                    <Text fontSize={isActive ? \"lg\" : \"md\"}>\n                      {step.emoji}\n                    </Text>\n                  )}\n                </Circle>\n                \n                <Text\n                  fontSize=\"xs\"\n                  color={getStepColor(status)}\n                  fontWeight={isActive ? \"bold\" : \"normal\"}\n                  textAlign=\"center\"\n                  lineHeight=\"1.2\"\n                >\n                  {step.label}\n                </Text>\n              </VStack>\n\n              {/* Connector Line */}\n              {index < steps.length - 1 && (\n                <Box\n                  flex={1}\n                  height=\"1px\"\n                  bg={\n                    completedSteps.includes(steps[index + 1].id) || \n                    (isCompleted && steps[index + 1].id === currentStep)\n                      ? completedColor\n                      : inactiveColor\n                  }\n                  mx={2}\n                  mt={-4}\n                />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </HStack>\n\n      {/* Current Step Description */}\n      <Box textAlign=\"center\" px={4}>\n        <Text fontSize=\"sm\" color=\"gray.600\">\n          {currentStep === 'gender' && '성별을 선택해주세요'}\n          {currentStep === 'body_metrics' && '키, 몸무게, 나이를 입력해주세요'}\n          {currentStep === 'goal' && '원하는 목표를 선택해주세요'}\n          {currentStep === 'activity' && '평소 활동량을 선택해주세요'}\n          {currentStep === 'calories' && '계산된 칼로리를 확인해주세요'}\n          {currentStep === 'budget' && '한 달 식비 예산을 설정해주세요'}\n        </Text>\n      </Box>\n    </VStack>\n  );\n};\n\nexport default ProgressIndicator;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OACEC,MAAM,CACNC,MAAM,CACNC,IAAI,CACJC,MAAM,CACNC,GAAG,CACHC,QAAQ,CACRC,iBAAiB,KACZ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQ1B,KAAM,CAAAC,iBAAmD,CAAGC,IAAA,EAGtD,IAHuD,CAC3DC,WAAW,CACXC,cACF,CAAC,CAAAF,IAAA,CACC,KAAM,CAAAG,WAAW,CAAGT,iBAAiB,CAAC,UAAU,CAAE,UAAU,CAAC,CAC7D,KAAM,CAAAU,cAAc,CAAGV,iBAAiB,CAAC,WAAW,CAAE,WAAW,CAAC,CAClE,KAAM,CAAAW,aAAa,CAAGX,iBAAiB,CAAC,UAAU,CAAE,UAAU,CAAC,CAC/D,KAAM,CAAAY,QAAQ,CAAGZ,iBAAiB,CAAC,SAAS,CAAE,UAAU,CAAC,CAEzD,KAAM,CAAAa,KAAK,CAAG,CACZ,CAAEC,EAAE,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,IAAK,CAAC,CAC1C,CAAEF,EAAE,CAAE,QAAQ,CAAEC,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,IAAK,CAAC,CAC5C,CAAEF,EAAE,CAAE,YAAY,CAAEC,KAAK,CAAE,MAAM,CAAEC,KAAK,CAAE,IAAK,CAAC,CACxC,CAEV,KAAM,CAAAC,gBAAgB,CAAGJ,KAAK,CAACK,SAAS,CAACC,IAAI,EAAIA,IAAI,CAACL,EAAE,GAAKP,WAAW,CAAC,CACzE,KAAM,CAAAa,kBAAkB,CAAI,CAACH,gBAAgB,CAAG,CAAC,EAAIJ,KAAK,CAACQ,MAAM,CAAI,GAAG,CAExE,KAAM,CAAAC,aAAa,CAAIC,MAAsB,EAAK,CAChD,GAAIf,cAAc,CAACgB,QAAQ,CAACD,MAAM,CAAC,CAAE,MAAO,WAAW,CACvD,GAAIA,MAAM,GAAKhB,WAAW,CAAE,MAAO,QAAQ,CAC3C,MAAO,UAAU,CACnB,CAAC,CAED,KAAM,CAAAkB,YAAY,CAAIC,MAAc,EAAK,CACvC,OAAQA,MAAM,EACZ,IAAK,WAAW,CAAE,MAAO,CAAAhB,cAAc,CACvC,IAAK,QAAQ,CAAE,MAAO,CAAAD,WAAW,CACjC,QAAS,MAAO,CAAAE,aAAa,CAC/B,CACF,CAAC,CAED,mBACEP,KAAA,CAACT,MAAM,EAACgC,OAAO,CAAE,CAAE,CAACC,CAAC,CAAC,MAAM,CAAAC,QAAA,eAE1BzB,KAAA,CAACN,GAAG,EAAC8B,CAAC,CAAC,MAAM,CAACE,EAAE,CAAE,CAAE,CAAAD,QAAA,eAClB3B,IAAA,CAACH,QAAQ,EACPgC,KAAK,CAAEX,kBAAmB,CAC1BY,WAAW,CAAC,MAAM,CAClBC,IAAI,CAAC,IAAI,CACTC,YAAY,CAAC,MAAM,CACnBC,EAAE,CAAC,UAAU,CACd,CAAC,cACF/B,KAAA,CAACV,MAAM,EAAC0C,OAAO,CAAC,eAAe,CAACC,EAAE,CAAE,CAAE,CAAAR,QAAA,eACpC3B,IAAA,CAACN,IAAI,EAAC0C,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAAV,QAAA,CAAC,cAErC,CAAM,CAAC,cACPzB,KAAA,CAACR,IAAI,EAAC0C,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAAV,QAAA,EACjCW,IAAI,CAACC,KAAK,CAACrB,kBAAkB,CAAC,CAAC,gBAClC,EAAM,CAAC,cACPlB,IAAA,CAACN,IAAI,EAAC0C,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAAV,QAAA,CAAC,cAErC,CAAM,CAAC,EACD,CAAC,EACN,CAAC,cAGN3B,IAAA,CAACR,MAAM,EAACiC,OAAO,CAAE,CAAE,CAACS,OAAO,CAAC,eAAe,CAACR,CAAC,CAAC,MAAM,CAACE,EAAE,CAAE,CAAE,CAAAD,QAAA,CACxDhB,KAAK,CAAC6B,GAAG,CAAC,CAACvB,IAAI,CAAEwB,KAAK,GAAK,CAC1B,KAAM,CAAAjB,MAAM,CAAGJ,aAAa,CAACH,IAAI,CAACL,EAAE,CAAC,CACrC,KAAM,CAAA8B,QAAQ,CAAGlB,MAAM,GAAK,QAAQ,CACpC,KAAM,CAAAmB,WAAW,CAAGnB,MAAM,GAAK,WAAW,CAE1C,mBACEtB,KAAA,CAACX,KAAK,CAACqD,QAAQ,EAAAjB,QAAA,eACbzB,KAAA,CAACT,MAAM,EAACgC,OAAO,CAAE,CAAE,CAACoB,IAAI,CAAE,CAAE,CAAAlB,QAAA,eAC1B3B,IAAA,CAACL,MAAM,EACLoC,IAAI,CAAEW,QAAQ,CAAG,IAAI,CAAG,IAAK,CAC7BT,EAAE,CAAES,QAAQ,CAAGhC,QAAQ,CAAG,aAAc,CACxC2B,KAAK,CAAEd,YAAY,CAACC,MAAM,CAAE,CAC5BsB,WAAW,CAAEJ,QAAQ,CAAG,KAAK,CAAG,KAAM,CACtCK,WAAW,CAAExB,YAAY,CAACC,MAAM,CAAE,CAClCwB,UAAU,CAAC,UAAU,CACrBC,QAAQ,CAAC,UAAU,CAAAtB,QAAA,CAElBgB,WAAW,cACV3C,IAAA,CAACN,IAAI,EAAC0C,QAAQ,CAAC,IAAI,CAAAT,QAAA,CAAC,QAAC,CAAM,CAAC,cAE5B3B,IAAA,CAACN,IAAI,EAAC0C,QAAQ,CAAEM,QAAQ,CAAG,IAAI,CAAG,IAAK,CAAAf,QAAA,CACpCV,IAAI,CAACH,KAAK,CACP,CACP,CACK,CAAC,cAETd,IAAA,CAACN,IAAI,EACH0C,QAAQ,CAAC,IAAI,CACbC,KAAK,CAAEd,YAAY,CAACC,MAAM,CAAE,CAC5B0B,UAAU,CAAER,QAAQ,CAAG,MAAM,CAAG,QAAS,CACzCS,SAAS,CAAC,QAAQ,CAClBC,UAAU,CAAC,KAAK,CAAAzB,QAAA,CAEfV,IAAI,CAACJ,KAAK,CACP,CAAC,EACD,CAAC,CAGR4B,KAAK,CAAG9B,KAAK,CAACQ,MAAM,CAAG,CAAC,eACvBnB,IAAA,CAACJ,GAAG,EACFiD,IAAI,CAAE,CAAE,CACRQ,MAAM,CAAC,KAAK,CACZpB,EAAE,CACA3B,cAAc,CAACgB,QAAQ,CAACX,KAAK,CAAC8B,KAAK,CAAG,CAAC,CAAC,CAAC7B,EAAE,CAAC,EAC3C+B,WAAW,EAAIhC,KAAK,CAAC8B,KAAK,CAAG,CAAC,CAAC,CAAC7B,EAAE,GAAKP,WAAY,CAChDG,cAAc,CACdC,aACL,CACD6C,EAAE,CAAE,CAAE,CACNnB,EAAE,CAAE,CAAC,CAAE,CACR,CACF,GA7CkBlB,IAAI,CAACL,EA8CV,CAAC,CAErB,CAAC,CAAC,CACI,CAAC,cAGTZ,IAAA,CAACJ,GAAG,EAACuD,SAAS,CAAC,QAAQ,CAACvB,EAAE,CAAE,CAAE,CAAAD,QAAA,cAC5BzB,KAAA,CAACR,IAAI,EAAC0C,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAAV,QAAA,EACjCtB,WAAW,GAAK,QAAQ,EAAI,YAAY,CACxCA,WAAW,GAAK,cAAc,EAAI,oBAAoB,CACtDA,WAAW,GAAK,MAAM,EAAI,gBAAgB,CAC1CA,WAAW,GAAK,UAAU,EAAI,gBAAgB,CAC9CA,WAAW,GAAK,UAAU,EAAI,iBAAiB,CAC/CA,WAAW,GAAK,QAAQ,EAAI,mBAAmB,EAC5C,CAAC,CACJ,CAAC,EACA,CAAC,CAEb,CAAC,CAED,cAAe,CAAAF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}