{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{Box,Container,VStack,HStack,Text,Button,Card,CardBody,Heading,Image,Badge,Grid,GridItem,Progress,useToast,Icon,Accordion,AccordionItem,AccordionButton,AccordionPanel,AccordionIcon,Tabs,TabList,TabPanels,Tab,TabPanel,Circle}from'@chakra-ui/react';import{ArrowBackIcon,ExternalLinkIcon,TimeIcon}from'@chakra-ui/icons';import{useAppContext}from'../context/AppContext';import{getRecipesByGoal,getRecipeIngredients,recipeLoader}from'../data/recipeData';import{calculateRecipeFrequency}from'../utils/personalizedRecommendation';import{debugRecipeMapping}from'../utils/recipeDebugger';import Layout from'./Layout/Layout';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RecommendationScreen=()=>{var _recipeStats$totalRec,_recipeStats$avgViews;const navigate=useNavigate();const toast=useToast();const{userInput,recommendationResult,setSelectedProduct,userProfile// 사용자 목표 정보 가져오기\n}=useAppContext();// 🍳 사용자 목표에 맞는 레시피 가져오기 (비동기) - hooks를 조건부 리턴 전에 선언\nconst[recommendedRecipes,setRecommendedRecipes]=useState([]);const[isLoadingRecipes,setIsLoadingRecipes]=useState(true);const[recipeStats,setRecipeStats]=useState(null);useEffect(()=>{// 추천 결과가 없으면 메인 페이지로 리다이렉트\nif(!recommendationResult){toast({title:\"추천 결과를 찾을 수 없습니다\",description:\"메인 페이지로 돌아가서 다시 시도해주세요.\",status:\"error\",duration:3000,isClosable:true});navigate('/');return;}const loadRecipes=async()=>{setIsLoadingRecipes(true);try{// 🔍 디버깅 실행\nconsole.log('🔍 === 레시피 매핑 디버깅 시작 ===');debugRecipeMapping();// 캐시 진단\nconsole.log('🔍 === 캐시 진단 시작 ===');await recipeLoader.diagnoseCacheStatus();// 사용자 목표 확인 및 설정\nconst userGoal=userProfile.goal||'maintenance';console.log('🎯 사용자 목표:',userGoal);// 목표가 없으면 기본값으로 설정\nif(!userProfile.goal){console.log('⚠️ 사용자 목표가 설정되지 않음, 기본값(maintenance)으로 설정');}// 레시피 로드\nconst recipes=await getRecipesByGoal(userGoal);console.log('📋 로드된 레시피 수:',recipes.length);console.log('📋 레시피 ID들:',recipes.map(r=>r.id));if(recipes.length===0){console.error('⚠️ 레시피가 하나도 로드되지 않았습니다!');console.log('💡 CSV 파일이 제대로 로드되는지 네트워크 탭에서 확인하세요');console.log('💡 브라우저 콘솔에서 에러 메시지를 확인하세요');// 통계 정보로 CSV 로드 여부 확인\nconst stats=await recipeLoader.getStatistics();console.log('📊 CSV 통계:',stats);if(stats.totalRecipes===0){console.error('❌ CSV 파일이 로드되지 않았습니다!');}}setRecommendedRecipes(recipes);// 통계 정보 로드\nconst stats=await recipeLoader.getStatistics();setRecipeStats(stats);}catch(error){console.error('❌ 레시피 로드 실패:',error);// 에러 상세 정보\nif(error instanceof Error){console.error('에러 메시지:',error.message);console.error('에러 스택:',error.stack);}// 빈 배열로 설정하여 UI 크래시 방지\nsetRecommendedRecipes([]);}finally{setIsLoadingRecipes(false);}};loadRecipes();},[userProfile.goal]);// recommendationResult가 없으면 로딩 상태 표시\nif(!recommendationResult){return/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(Container,{maxW:\"container.xl\",py:8,children:/*#__PURE__*/_jsx(Text,{textAlign:\"center\",children:\"\\uB85C\\uB529 \\uC911...\"})})});}const{totalBudgetUsed,budgetRemaining,nutritionBalance,message,nutritionTargets,userInsights}=recommendationResult;// 시간대별 레시피 분류\nconst mealTypeRecipes={breakfast:recommendedRecipes.filter(r=>r.mealType==='breakfast'),lunch:recommendedRecipes.filter(r=>r.mealType==='lunch'),dinner:recommendedRecipes.filter(r=>r.mealType==='dinner')};// 상품 클릭 핸들러\nconst handleProductClick=product=>{setSelectedProduct(product);navigate(\"/product/\".concat(product.id));};// 다시 입력하기 핸들러\nconst handleBackToInput=()=>{navigate('/');};const budgetUsagePercentage=totalBudgetUsed/userInput.budget*100;// 🎨 컴팩트 레시피 카드 컴포넌트\nconst CompactRecipeCard=_ref=>{let{recipe}=_ref;const[showAllIngredients,setShowAllIngredients]=useState(false);const[showAllInstructions,setShowAllInstructions]=useState(false);const ingredients=getRecipeIngredients(recipe.id);const totalPrice=ingredients.reduce((sum,ing)=>sum+ing.product.price,0);// 🍽️ 레시피 제조 빈도 분석\nconst recipeFrequency=calculateRecipeFrequency(recipe.id);// 🧮 영양소 계산 (재료별 영양소 × 사용량)\nconst totalNutrition=ingredients.reduce((total,ing)=>{const product=ing.product;const ratio=ing.quantity/100;// 100g 기준으로 계산\nreturn{calories:total.calories+product.nutrition.calories*ratio,carb:total.carb+product.nutrition.carb*ratio,protein:total.protein+product.nutrition.protein*ratio,fat:total.fat+product.nutrition.fat*ratio,sodium:total.sodium+product.nutrition.sodium*ratio,sugar:total.sugar+product.nutrition.sugar*ratio};},{calories:0,carb:0,protein:0,fat:0,sodium:0,sugar:0});return/*#__PURE__*/_jsx(Card,{borderRadius:\"xl\",overflow:\"hidden\",shadow:\"md\",_hover:{transform:\"translateY(-2px)\",shadow:\"lg\"},transition:\"all 0.2s ease\",bg:\"white\",border:\"1px\",borderColor:\"gray.200\",children:/*#__PURE__*/_jsx(CardBody,{p:4,children:/*#__PURE__*/_jsxs(HStack,{spacing:4,align:\"start\",children:[/*#__PURE__*/_jsxs(Box,{position:\"relative\",flexShrink:0,children:[/*#__PURE__*/_jsx(Image,{src:recipe.image,alt:recipe.name,w:\"120px\",h:\"120px\",objectFit:\"cover\",borderRadius:\"lg\",fallbackSrc:\"https://via.placeholder.com/120x120?text=\\uD83C\\uDF7D\\uFE0F\"}),/*#__PURE__*/_jsx(Badge,{position:\"absolute\",top:2,right:2,colorScheme:recipe.difficulty==='easy'?'green':recipe.difficulty==='medium'?'orange':'red',size:\"sm\",borderRadius:\"md\",children:recipe.difficulty==='easy'?'쉬움':recipe.difficulty==='medium'?'보통':'어려움'})]}),/*#__PURE__*/_jsx(VStack,{spacing:3,align:\"stretch\",flex:1,children:/*#__PURE__*/_jsxs(VStack,{spacing:2,align:\"stretch\",children:[/*#__PURE__*/_jsx(Heading,{size:\"md\",color:\"gray.800\",fontWeight:\"600\",noOfLines:1,children:recipe.name}),/*#__PURE__*/_jsx(Text,{color:\"gray.600\",fontSize:\"sm\",noOfLines:2,lineHeight:\"1.4\",children:recipe.description}),/*#__PURE__*/_jsxs(HStack,{spacing:4,wrap:\"wrap\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:1,children:[/*#__PURE__*/_jsx(TimeIcon,{boxSize:3,color:\"orange.500\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",fontWeight:\"medium\",children:[recipe.cookingTime,\"\\uBD84\"]})]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"gray.500\",children:[\"\\uC7AC\\uB8CC \",ingredients.length,\"\\uAC1C\"]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"teal.600\",children:[totalPrice.toLocaleString(),\"\\uC6D0\"]}),/*#__PURE__*/_jsxs(Badge,{colorScheme:\"blue\",size:\"sm\",variant:\"subtle\",children:[\"\\uC608\\uC0B0 \",(totalPrice/userInput.budget*100).toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsx(Card,{bg:\"linear-gradient(135deg, #4299e1 0%, #3182ce 100%)\",borderRadius:\"lg\",overflow:\"hidden\",children:/*#__PURE__*/_jsx(CardBody,{p:3,children:/*#__PURE__*/_jsxs(HStack,{spacing:3,justify:\"space-between\",align:\"center\",children:[/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"start\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\uD83D\\uDCE6\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"white\",fontWeight:\"medium\",children:\"\\uAD6C\\uB9E4 \\uD6C4 \\uC81C\\uC870 \\uAC00\\uB2A5\"})]}),/*#__PURE__*/_jsxs(HStack,{spacing:1,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xl\",fontWeight:\"bold\",color:\"white\",children:recipeFrequency.minPossibleRecipes}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"whiteAlpha.800\",children:\"\\uBC88\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.600\",children:\"(\\uCD5C\\uC18C \\uAE30\\uC900)\"})]})]}),/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"end\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.700\",children:\"1\\uD68C\\uB2F9 \\uBE44\\uC6A9\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"lg\",fontWeight:\"bold\",color:\"yellow.200\",children:[recipeFrequency.totalCostPerRecipe.toLocaleString(),\"\\uC6D0\"]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"whiteAlpha.600\",children:[\"\\uB07C\\uB2C8 \\uC608\\uC0B0: \",userInsights===null||userInsights===void 0?void 0:userInsights.budgetPerMeal.toLocaleString(),\"\\uC6D0\"]})]})]})})}),/*#__PURE__*/_jsx(Card,{bg:\"linear-gradient(135deg, #38b2ac 0%, #319795 100%)\",borderRadius:\"lg\",overflow:\"hidden\",children:/*#__PURE__*/_jsx(CardBody,{p:3,children:/*#__PURE__*/_jsxs(VStack,{spacing:3,children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,w:\"full\",justify:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\uD83C\\uDF4E\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"white\",fontWeight:\"bold\",children:\"1\\uD68C\\uBD84 \\uC601\\uC591\\uC815\\uBCF4\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.700\",children:\"(\\uC77C\\uC77C\\uBAA9\\uD45C \\uB300\\uBE44)\"})]}),/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",align:\"center\",wrap:\"wrap\",w:\"full\",children:[/*#__PURE__*/_jsxs(VStack,{spacing:1,align:\"center\",bg:\"whiteAlpha.200\",p:2,borderRadius:\"md\",minW:\"65px\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.800\",children:\"\\uCD1D \\uCE7C\\uB85C\\uB9AC\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",fontWeight:\"bold\",color:\"white\",children:Math.round(totalNutrition.calories)}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.700\",children:\"kcal\"}),userInsights&&/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"yellow.200\",children:[(totalNutrition.calories/userInsights.dailyCalorieGoal*100).toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsxs(VStack,{spacing:1,align:\"center\",bg:\"whiteAlpha.200\",p:2,borderRadius:\"md\",minW:\"50px\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.800\",children:\"\\uD0C4\\uC218\\uD654\\uBB3C\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"white\",children:[Math.round(totalNutrition.carb),\"g\"]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"orange.200\",children:[totalNutrition.calories>0?Math.round(totalNutrition.carb*4/totalNutrition.calories*100):0,\"%\"]})]}),/*#__PURE__*/_jsxs(VStack,{spacing:1,align:\"center\",bg:\"whiteAlpha.200\",p:2,borderRadius:\"md\",minW:\"50px\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.800\",children:\"\\uB2E8\\uBC31\\uC9C8\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"white\",children:[Math.round(totalNutrition.protein),\"g\"]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"red.200\",children:[totalNutrition.calories>0?Math.round(totalNutrition.protein*4/totalNutrition.calories*100):0,\"%\"]})]}),/*#__PURE__*/_jsxs(VStack,{spacing:1,align:\"center\",bg:\"whiteAlpha.200\",p:2,borderRadius:\"md\",minW:\"50px\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.800\",children:\"\\uC9C0\\uBC29\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"white\",children:[Math.round(totalNutrition.fat),\"g\"]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"green.200\",children:[totalNutrition.calories>0?Math.round(totalNutrition.fat*9/totalNutrition.calories*100):0,\"%\"]})]})]}),/*#__PURE__*/_jsxs(Box,{w:\"full\",bg:\"whiteAlpha.200\",p:3,borderRadius:\"md\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,mb:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"white\",fontWeight:\"bold\",children:\"\\uC7AC\\uB8CC\\uBCC4 \\uCE7C\\uB85C\\uB9AC \\uAE30\\uC5EC\\uB3C4\"})]}),/*#__PURE__*/_jsx(VStack,{spacing:1,align:\"stretch\",children:ingredients.slice(0,4).map((ingredient,index)=>{const ingredientCalories=Math.round(ingredient.product.nutrition.calories*ingredient.quantity/100);const contribution=totalNutrition.calories>0?ingredientCalories/totalNutrition.calories*100:0;return/*#__PURE__*/_jsxs(HStack,{spacing:2,align:\"center\",children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"whiteAlpha.900\",minW:\"70px\",noOfLines:1,fontWeight:\"medium\",children:[ingredient.product.name.split(' ')[0],\" \",ingredient.quantity,ingredient.unit]}),/*#__PURE__*/_jsx(Box,{flex:1,bg:\"whiteAlpha.400\",borderRadius:\"full\",h:\"6px\",position:\"relative\",children:/*#__PURE__*/_jsx(Box,{bg:index===0?\"yellow.300\":index===1?\"orange.300\":index===2?\"red.300\":\"green.300\",h:\"full\",borderRadius:\"full\",w:\"\".concat(contribution,\"%\"),boxShadow:\"inset 0 1px 0 rgba(255,255,255,0.3)\"})}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"white\",minW:\"35px\",fontWeight:\"bold\",children:[ingredientCalories,\"kcal\"]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"yellow.200\",minW:\"30px\",fontWeight:\"bold\",children:[Math.round(contribution),\"%\"]})]},index);})})]})]})})}),/*#__PURE__*/_jsxs(HStack,{spacing:1,wrap:\"wrap\",children:[recipe.tags.slice(0,3).map((tag,index)=>/*#__PURE__*/_jsxs(Badge,{size:\"sm\",colorScheme:\"teal\",variant:\"outline\",borderRadius:\"md\",fontSize:\"xs\",children:[\"#\",tag]},index)),recipe.tags.length>3&&/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"gray.400\",children:[\"+\",recipe.tags.length-3]})]})]})}),/*#__PURE__*/_jsx(VStack,{spacing:2,flexShrink:0,children:/*#__PURE__*/_jsx(Accordion,{allowToggle:true,w:\"full\",children:/*#__PURE__*/_jsxs(AccordionItem,{border:\"none\",children:[/*#__PURE__*/_jsxs(AccordionButton,{borderRadius:\"lg\",bg:\"linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)\",border:\"1px solid\",borderColor:\"gray.300\",px:3,py:2,fontSize:\"xs\",fontWeight:\"bold\",color:\"gray.700\",_hover:{bg:\"linear-gradient(135deg, #cbd5e0 0%, #a0aec0 100%)\",transform:\"translateY(-1px)\"},_expanded:{bg:\"linear-gradient(135deg, #a0aec0 0%, #718096 100%)\",color:\"white\"},justifyContent:\"center\",transition:\"all 0.2s ease\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",mr:2,children:\"\\uC0C1\\uC138\\uBCF4\\uAE30\"}),/*#__PURE__*/_jsx(AccordionIcon,{})]}),/*#__PURE__*/_jsx(AccordionPanel,{px:0,py:3,children:/*#__PURE__*/_jsxs(VStack,{spacing:3,align:\"stretch\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",align:\"center\",mb:3,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"medium\",color:\"gray.700\",children:\"\\uD83D\\uDED2 \\uD544\\uC694\\uD55C \\uC7AC\\uB8CC\"}),/*#__PURE__*/_jsx(Card,{bg:\"gray.50\",size:\"sm\",borderRadius:\"md\",children:/*#__PURE__*/_jsx(CardBody,{p:2,children:/*#__PURE__*/_jsxs(HStack,{spacing:2,children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"orange.600\",fontWeight:\"bold\",children:[\"\\uCD1D \",Math.round(totalNutrition.calories),\"kcal\"]}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.500\",children:\"|\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"blue.600\",children:[\"\\uD0C4\",Math.round(totalNutrition.carb),\"g\"]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"red.600\",children:[\"\\uB2E8\",Math.round(totalNutrition.protein),\"g\"]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"green.600\",children:[\"\\uC9C0\",Math.round(totalNutrition.fat),\"g\"]})]})})})]}),/*#__PURE__*/_jsxs(VStack,{spacing:2,align:\"stretch\",children:[(showAllIngredients?ingredients:ingredients.slice(0,3)).map((ingredient,index)=>/*#__PURE__*/_jsxs(HStack,{spacing:3,p:2,bg:\"gray.50\",borderRadius:\"md\",cursor:\"pointer\",_hover:{bg:\"gray.100\"},onClick:()=>handleProductClick(ingredient.product),children:[/*#__PURE__*/_jsx(Image,{src:ingredient.product.imageUrl,alt:ingredient.product.name,boxSize:\"40px\",objectFit:\"cover\",borderRadius:\"md\",fallbackSrc:\"https://via.placeholder.com/40x40?text=\\uD83D\\uDED2\"}),/*#__PURE__*/_jsxs(VStack,{align:\"start\",spacing:0,flex:1,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",fontWeight:\"medium\",noOfLines:1,children:ingredient.product.name}),/*#__PURE__*/_jsxs(HStack,{spacing:2,children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"gray.600\",children:[ingredient.quantity,ingredient.unit]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",fontWeight:\"bold\",color:\"red.500\",children:[ingredient.product.price.toLocaleString(),\"\\uC6D0\"]})]}),/*#__PURE__*/_jsxs(VStack,{spacing:1,mt:2,align:\"stretch\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,justify:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"gray.600\",fontWeight:\"medium\",children:[\"\\uD83D\\uDCCA \",ingredient.quantity,ingredient.unit,\" \\uC601\\uC591\\uC815\\uBCF4\"]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"gray.500\",children:[\"(\",Math.round(ingredient.product.nutrition.calories*ingredient.quantity/100/totalNutrition.calories*100),\"% \\uAE30\\uC5EC)\"]})]}),/*#__PURE__*/_jsxs(HStack,{spacing:3,wrap:\"wrap\",children:[/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"center\",minW:\"45px\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"orange.600\",fontWeight:\"bold\",children:Math.round(ingredient.product.nutrition.calories*ingredient.quantity/100)}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.500\",children:\"kcal\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"center\",minW:\"35px\",children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"blue.600\",fontWeight:\"bold\",children:[Math.round(ingredient.product.nutrition.carb*ingredient.quantity/100),\"g\"]}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.500\",children:\"\\uD0C4\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"center\",minW:\"35px\",children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"red.600\",fontWeight:\"bold\",children:[Math.round(ingredient.product.nutrition.protein*ingredient.quantity/100),\"g\"]}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.500\",children:\"\\uB2E8\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"center\",minW:\"35px\",children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"green.600\",fontWeight:\"bold\",children:[Math.round(ingredient.product.nutrition.fat*ingredient.quantity/100),\"g\"]}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.500\",children:\"\\uC9C0\"})]})]}),/*#__PURE__*/_jsx(Box,{mt:2,p:2,bg:\"teal.50\",borderRadius:\"md\",borderWidth:1,borderColor:\"teal.200\",children:(()=>{const ingredientAnalysis=recipeFrequency.ingredientAnalysis.find(analysis=>analysis.productName===ingredient.product.name);return ingredientAnalysis?/*#__PURE__*/_jsxs(VStack,{spacing:1,align:\"stretch\",children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"teal.700\",fontWeight:\"medium\",children:\"\\uD83D\\uDCE6 \\uAD6C\\uB9E4 \\uC2DC\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:ingredientAnalysis.productPackageSize})]}),/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uC774 \\uC7AC\\uB8CC\\uB85C \\uAC00\\uB2A5:\"}),/*#__PURE__*/_jsxs(HStack,{spacing:1,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"teal.600\",children:ingredientAnalysis.maxRecipesFromThisIngredient}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uBC88\"})]})]}),/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"1\\uD68C\\uB2F9 \\uC7AC\\uB8CC\\uBE44:\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",fontWeight:\"bold\",color:\"red.600\",children:[ingredientAnalysis.costPerRecipe.toLocaleString(),\"\\uC6D0\"]})]})]}):/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.500\",children:\"\\uBD84\\uC11D \\uC815\\uBCF4 \\uC5C6\\uC74C\"});})()})]})]}),/*#__PURE__*/_jsx(Icon,{as:ExternalLinkIcon,boxSize:3,color:\"gray.400\"})]},index)),ingredients.length>3&&/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"sm\",fontSize:\"xs\",color:\"teal.600\",_hover:{bg:\"teal.50\"},onClick:()=>setShowAllIngredients(!showAllIngredients),children:showAllIngredients?\"접기\":\"+\".concat(ingredients.length-3,\"\\uAC1C \\uC7AC\\uB8CC \\uB354\\uBCF4\\uAE30\")})]})]}),/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[recipe.flavorProfile&&/*#__PURE__*/_jsxs(Box,{p:3,bg:\"purple.50\",borderRadius:\"md\",border:\"1px\",borderColor:\"purple.200\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,mb:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\uD83D\\uDC45\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"purple.700\",children:\"\\uB9DB \\uD504\\uB85C\\uD544\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:2,align:\"stretch\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,wrap:\"wrap\",children:[recipe.flavorProfile.taste.map((taste,idx)=>/*#__PURE__*/_jsx(Badge,{colorScheme:\"purple\",variant:\"subtle\",fontSize:\"xs\",children:taste},idx)),/*#__PURE__*/_jsx(Badge,{colorScheme:\"gray\",variant:\"outline\",fontSize:\"xs\",children:recipe.flavorProfile.intensity==='light'?'순한맛':recipe.flavorProfile.intensity==='medium'?'보통맛':'진한맛'})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"purple.600\",fontStyle:\"italic\",children:recipe.flavorProfile.description})]})]}),recipe.cookingTips&&/*#__PURE__*/_jsxs(Box,{p:3,bg:\"blue.50\",borderRadius:\"md\",border:\"1px\",borderColor:\"blue.200\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,mb:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\uD83D\\uDCA1\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"blue.700\",children:\"\\uC870\\uB9AC \\uD301\"})]}),/*#__PURE__*/_jsx(VStack,{spacing:2,align:\"stretch\",children:recipe.cookingTips.cooking.slice(0,2).map((tip,idx)=>/*#__PURE__*/_jsxs(HStack,{spacing:2,align:\"start\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"blue.600\",children:\"\\u2022\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"blue.600\",children:tip})]},idx))})]}),recipe.nutritionHighlights&&/*#__PURE__*/_jsxs(Box,{p:3,bg:\"green.50\",borderRadius:\"md\",border:\"1px\",borderColor:\"green.200\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,mb:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\uD83C\\uDF3F\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"green.700\",children:\"\\uC601\\uC591 \\uD3EC\\uC778\\uD2B8\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:1,align:\"stretch\",children:[recipe.nutritionHighlights.mainBenefits.slice(0,2).map((benefit,idx)=>/*#__PURE__*/_jsxs(HStack,{spacing:2,align:\"start\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"green.600\",children:\"\\u2713\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"green.600\",children:benefit})]},idx)),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"green.500\",fontWeight:\"medium\",mt:1,children:recipe.nutritionHighlights.calorieContext})]})]}),recipe.chefTips&&recipe.chefTips.length>0&&/*#__PURE__*/_jsxs(Box,{p:3,bg:\"yellow.50\",borderRadius:\"md\",border:\"1px\",borderColor:\"yellow.200\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,mb:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\uD83D\\uDC68\\u200D\\uD83C\\uDF73\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"yellow.700\",children:\"\\uC804\\uBB38\\uAC00 \\uD301\"})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"yellow.600\",fontWeight:\"medium\",children:recipe.chefTips[0]})]}),recipe.userRatings&&/*#__PURE__*/_jsxs(Box,{p:3,bg:\"orange.50\",borderRadius:\"md\",border:\"1px\",borderColor:\"orange.200\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,mb:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\u2B50\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"orange.700\",children:\"\\uC0AC\\uC6A9\\uC790 \\uD3C9\\uAC00\"})]}),/*#__PURE__*/_jsxs(HStack,{spacing:4,children:[/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",fontWeight:\"bold\",color:\"orange.600\",children:recipe.userRatings.overall}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uC804\\uCCB4\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"red.500\",children:recipe.userRatings.taste}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uB9DB\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"blue.500\",children:recipe.userRatings.difficulty}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uB09C\\uC774\\uB3C4\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"bold\",color:\"green.500\",children:recipe.userRatings.nutrition}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uC601\\uC591\"})]})]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"gray.500\",mt:2,children:[recipe.userRatings.reviewCount.toLocaleString(),\"\\uBA85\\uC774 \\uD3C9\\uAC00\\uD588\\uC5B4\\uC694\"]})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",fontWeight:\"medium\",mb:2,color:\"gray.700\",children:\"\\uD83D\\uDC68\\u200D\\uD83C\\uDF73 \\uC870\\uB9AC \\uC21C\\uC11C\"}),/*#__PURE__*/_jsxs(VStack,{spacing:1,align:\"stretch\",children:[(showAllInstructions?recipe.instructions:recipe.instructions.slice(0,2)).map((step,index)=>/*#__PURE__*/_jsxs(HStack,{spacing:2,align:\"start\",children:[/*#__PURE__*/_jsx(Circle,{size:\"16px\",bg:\"orange.400\",color:\"white\",fontWeight:\"bold\",fontSize:\"xs\",flexShrink:0,children:index+1}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",lineHeight:\"1.4\",color:\"gray.600\",children:step.length>50?step.substring(0,50)+'...':step})]},index)),recipe.instructions.length>2&&/*#__PURE__*/_jsx(Button,{variant:\"ghost\",size:\"sm\",fontSize:\"xs\",color:\"orange.600\",_hover:{bg:\"orange.50\"},onClick:()=>setShowAllInstructions(!showAllInstructions),children:showAllInstructions?\"접기\":\"+\".concat(recipe.instructions.length-2,\"\\uB2E8\\uACC4 \\uB354\\uBCF4\\uAE30\")})]})]})]})]})})]})})})]})})});};return/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(Container,{maxW:\"6xl\",py:8,children:/*#__PURE__*/_jsxs(VStack,{spacing:8,align:\"stretch\",children:[/*#__PURE__*/_jsx(Card,{bg:\"gradient-to-r from-purple.500 to-pink.500\",color:\"white\",borderRadius:\"2xl\",children:/*#__PURE__*/_jsx(CardBody,{p:6,children:/*#__PURE__*/_jsx(HStack,{justify:\"space-between\",align:\"center\",children:/*#__PURE__*/_jsxs(HStack,{spacing:4,children:[/*#__PURE__*/_jsx(Button,{leftIcon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),variant:\"ghost\",color:\"white\",_hover:{bg:\"whiteAlpha.200\"},onClick:handleBackToInput,children:\"\\uB2E4\\uC2DC \\uC785\\uB825\\uD558\\uAE30\"}),/*#__PURE__*/_jsxs(VStack,{align:\"start\",spacing:1,children:[/*#__PURE__*/_jsxs(Heading,{size:\"lg\",children:[\"\\uD83C\\uDF73 \",userProfile.goal==='weight_loss'?'다이어트':userProfile.goal==='muscle_gain'?'근성장':'건강 유지',\" \\uB9DE\\uCDA4 \\uB808\\uC2DC\\uD53C\"]}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",opacity:0.9,children:\"\\uBAA9\\uD45C\\uC5D0 \\uCD5C\\uC801\\uD654\\uB41C \\uB9DB\\uC788\\uB294 \\uC694\\uB9AC \\uB808\\uC2DC\\uD53C\\uC640 \\uCFE0\\uD321 \\uC7AC\\uB8CC\\uB97C \\uCD94\\uCC9C\\uB4DC\\uB824\\uC694\"})]})]})})})}),recipeStats&&/*#__PURE__*/_jsx(Card,{bg:\"purple.50\",borderRadius:\"xl\",shadow:\"md\",mb:6,children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(HStack,{spacing:2,mb:4,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"2xl\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",color:\"purple.700\",children:\"\\uB9CC\\uAC1C\\uC758 \\uB808\\uC2DC\\uD53C \\uC2E4\\uC2DC\\uAC04 \\uB370\\uC774\\uD130\"})]}),/*#__PURE__*/_jsxs(Grid,{templateColumns:\"repeat(auto-fit, minmax(150px, 1fr))\",gap:4,children:[/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsxs(VStack,{p:3,bg:\"white\",borderRadius:\"lg\",border:\"1px\",borderColor:\"purple.200\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"2xl\",fontWeight:\"bold\",color:\"purple.600\",children:((_recipeStats$totalRec=recipeStats.totalRecipes)===null||_recipeStats$totalRec===void 0?void 0:_recipeStats$totalRec.toLocaleString())||0}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uCD1D \\uB808\\uC2DC\\uD53C\"})]})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsxs(VStack,{p:3,bg:\"white\",borderRadius:\"lg\",border:\"1px\",borderColor:\"purple.200\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"2xl\",fontWeight:\"bold\",color:\"blue.600\",children:((_recipeStats$avgViews=recipeStats.avgViews)===null||_recipeStats$avgViews===void 0?void 0:_recipeStats$avgViews.toLocaleString())||0}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uD3C9\\uADE0 \\uC870\\uD68C\\uC218\"})]})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsxs(VStack,{p:3,bg:\"white\",borderRadius:\"lg\",border:\"1px\",borderColor:\"purple.200\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"2xl\",fontWeight:\"bold\",color:\"orange.600\",children:recipeStats.avgScraps||0}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uD3C9\\uADE0 \\uC2A4\\uD06C\\uB7A9\"})]})}),/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsxs(VStack,{p:3,bg:\"white\",borderRadius:\"lg\",border:\"1px\",borderColor:\"purple.200\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"2xl\",fontWeight:\"bold\",color:\"green.600\",children:recommendedRecipes.length}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"gray.600\",children:\"\\uCD94\\uCC9C \\uB808\\uC2DC\\uD53C\"})]})})]})]})}),/*#__PURE__*/_jsx(Card,{bg:\"linear-gradient(135deg, #4299e1 0%, #3182ce 50%, #2b77cb 100%)\",borderRadius:\"2xl\",shadow:\"2xl\",border:\"none\",overflow:\"hidden\",children:/*#__PURE__*/_jsxs(CardBody,{p:0,children:[/*#__PURE__*/_jsx(Box,{bg:\"whiteAlpha.100\",p:6,children:/*#__PURE__*/_jsxs(VStack,{spacing:4,children:[/*#__PURE__*/_jsxs(HStack,{justify:\"center\",spacing:3,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"2xl\",children:\"\\uD83D\\uDCB0\"}),/*#__PURE__*/_jsx(Heading,{size:\"lg\",color:\"white\",textAlign:\"center\",children:\"\\uC6D4\\uAC04 \\uC2DD\\uB2E8 \\uC608\\uC0B0 \\uD604\\uD669\"})]}),/*#__PURE__*/_jsxs(Box,{w:\"full\",maxW:\"600px\",children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",align:\"end\",mb:3,children:[/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"start\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.700\",children:\"\\uC0AC\\uC6A9\\uB41C \\uC608\\uC0B0\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"2xl\",fontWeight:\"bold\",color:\"white\",children:[totalBudgetUsed.toLocaleString(),\"\\uC6D0\"]})]}),/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.700\",children:\"\\uC9C4\\uD589\\uB960\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"lg\",fontWeight:\"bold\",color:budgetUsagePercentage>100?\"red.200\":\"green.200\",children:[budgetUsagePercentage.toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsxs(VStack,{spacing:0,align:\"end\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.700\",children:budgetRemaining<0?\"초과 금액\":\"남은 예산\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"2xl\",fontWeight:\"bold\",color:budgetRemaining<0?\"red.200\":\"green.200\",children:[Math.abs(budgetRemaining).toLocaleString(),\"\\uC6D0\"]})]})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Progress,{value:Math.min(budgetUsagePercentage,100),colorScheme:budgetUsagePercentage>100?\"red\":budgetUsagePercentage>80?\"yellow\":\"green\",size:\"lg\",borderRadius:\"full\",bg:\"whiteAlpha.300\"}),budgetUsagePercentage>100&&/*#__PURE__*/_jsxs(HStack,{mt:2,spacing:2,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"red.200\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"red.200\",children:[\"\\uC608\\uC0B0\\uC744 \",(budgetUsagePercentage-100).toFixed(1),\"% \\uCD08\\uACFC\\uD588\\uC5B4\\uC694\"]})]})]})]})]})}),/*#__PURE__*/_jsx(Box,{bg:\"whiteAlpha.50\",p:6,children:/*#__PURE__*/_jsxs(Grid,{templateColumns:{base:\"1fr\",md:\"2fr 1fr\"},gap:8,alignItems:\"start\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(HStack,{spacing:3,mb:4,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xl\",children:\"\\uD83C\\uDF4E\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",color:\"white\",children:\"\\uC601\\uC591 \\uADE0\\uD615\"})]}),/*#__PURE__*/_jsxs(HStack,{spacing:6,align:\"center\",children:[/*#__PURE__*/_jsxs(VStack,{spacing:2,flex:1,children:[/*#__PURE__*/_jsxs(HStack,{w:\"full\",justify:\"space-between\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"whiteAlpha.800\",fontWeight:\"medium\",children:\"\\uD0C4\\uC218\\uD654\\uBB3C\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"orange.200\",fontWeight:\"bold\",children:[nutritionBalance.carb.toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsx(Progress,{value:nutritionBalance.carb,colorScheme:\"orange\",size:\"md\",w:\"full\",borderRadius:\"full\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.600\",children:\"\\uBAA9\\uD45C: 35%\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:2,flex:1,children:[/*#__PURE__*/_jsxs(HStack,{w:\"full\",justify:\"space-between\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"whiteAlpha.800\",fontWeight:\"medium\",children:\"\\uB2E8\\uBC31\\uC9C8\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"red.200\",fontWeight:\"bold\",children:[nutritionBalance.protein.toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsx(Progress,{value:nutritionBalance.protein,colorScheme:\"red\",size:\"md\",w:\"full\",borderRadius:\"full\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.600\",children:\"\\uBAA9\\uD45C: 40%\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:2,flex:1,children:[/*#__PURE__*/_jsxs(HStack,{w:\"full\",justify:\"space-between\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"whiteAlpha.800\",fontWeight:\"medium\",children:\"\\uC9C0\\uBC29\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"green.200\",fontWeight:\"bold\",children:[nutritionBalance.fat.toFixed(0),\"%\"]})]}),/*#__PURE__*/_jsx(Progress,{value:nutritionBalance.fat,colorScheme:\"green\",size:\"md\",w:\"full\",borderRadius:\"full\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"xs\",color:\"whiteAlpha.600\",children:\"\\uBAA9\\uD45C: 25%\"})]})]})]}),userInsights&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(HStack,{spacing:3,mb:4,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xl\",children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsx(Heading,{size:\"md\",color:\"white\",children:\"\\uAC1C\\uC778 \\uBAA9\\uD45C\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:3,children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",w:\"full\",p:3,bg:\"whiteAlpha.200\",borderRadius:\"lg\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"whiteAlpha.800\",children:\"\\uC77C\\uC77C \\uCE7C\\uB85C\\uB9AC\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"md\",fontWeight:\"bold\",color:\"white\",children:[userInsights.dailyCalorieGoal.toLocaleString(),\"kcal\"]})]}),/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",w:\"full\",p:3,bg:\"whiteAlpha.200\",borderRadius:\"lg\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"whiteAlpha.800\",children:\"\\uD544\\uC694 \\uB2E8\\uBC31\\uC9C8\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"md\",fontWeight:\"bold\",color:\"white\",children:[Math.round(userInsights.proteinNeeds),\"g\"]})]}),/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",w:\"full\",p:3,bg:\"whiteAlpha.200\",borderRadius:\"lg\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"whiteAlpha.800\",children:\"\\uB07C\\uB2C8\\uB2F9 \\uC608\\uC0B0\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"md\",fontWeight:\"bold\",color:\"white\",children:[userInsights.budgetPerMeal.toLocaleString(),\"\\uC6D0\"]})]})]})]})]})}),message&&/*#__PURE__*/_jsx(Box,{bg:\"whiteAlpha.200\",p:4,borderTop:\"1px\",borderColor:\"whiteAlpha.300\",children:/*#__PURE__*/_jsxs(HStack,{spacing:3,justify:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",children:\"\\uD83D\\uDCA1\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"white\",fontWeight:\"medium\",textAlign:\"center\",children:message})]})})]})}),/*#__PURE__*/_jsx(Box,{textAlign:\"center\",py:4,children:/*#__PURE__*/_jsxs(VStack,{spacing:3,children:[/*#__PURE__*/_jsxs(HStack,{spacing:3,justify:\"center\",children:[/*#__PURE__*/_jsx(Box,{w:\"50px\",h:\"1px\",bg:\"blue.300\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"2xl\",children:\"\\uD83C\\uDF7D\\uFE0F\"}),/*#__PURE__*/_jsx(Box,{w:\"50px\",h:\"1px\",bg:\"blue.300\"})]}),/*#__PURE__*/_jsxs(Heading,{size:\"lg\",color:\"gray.700\",children:[\"\\uD83C\\uDFAF \",userProfile.goal==='weight_loss'?'다이어트':userProfile.goal==='muscle_gain'?'근성장':'건강 유지',\" \\uB9DE\\uCDA4 \\uB808\\uC2DC\\uD53C\"]}),isLoadingRecipes&&/*#__PURE__*/_jsxs(HStack,{spacing:2,children:[/*#__PURE__*/_jsx(Progress,{size:\"xs\",isIndeterminate:true,colorScheme:\"blue\",w:\"200px\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.600\",children:\"\\uB9CC\\uAC1C\\uC758 \\uB808\\uC2DC\\uD53C \\uB85C\\uB529 \\uC911...\"})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.600\",maxW:\"500px\",children:\"\\uC704 \\uC608\\uC0B0\\uACFC \\uC601\\uC591 \\uBAA9\\uD45C\\uC5D0 \\uB9DE\\uCDB0 \\uC120\\uBCC4\\uB41C \\uB808\\uC2DC\\uD53C\\uB4E4\\uC785\\uB2C8\\uB2E4. \\uAC01 \\uB808\\uC2DC\\uD53C\\uB294 \\uAD6C\\uB9E4 \\uAC00\\uB2A5 \\uD69F\\uC218\\uC640 1\\uD68C\\uB2F9 \\uBE44\\uC6A9\\uC774 \\uACC4\\uC0B0\\uB418\\uC5B4 \\uC788\\uC5B4\\uC694!\"})]})}),/*#__PURE__*/_jsx(Card,{bg:\"gradient-to-r from-teal.50 to-green.50\",borderRadius:\"xl\",overflow:\"hidden\",children:/*#__PURE__*/_jsx(CardBody,{p:6,children:/*#__PURE__*/_jsxs(VStack,{spacing:4,textAlign:\"center\",mb:6,children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"lg\",fontWeight:\"bold\",color:\"teal.700\",children:[\"\\uD83C\\uDFAF \",userProfile.goal==='weight_loss'?'다이어트':userProfile.goal==='muscle_gain'?'근성장':'건강 유지',\" \\uBAA9\\uD45C\\uC5D0 \\uCD5C\\uC801\\uD654\\uB41C \\uB9DE\\uCDA4 \\uB808\\uC2DC\\uD53C\"]}),/*#__PURE__*/_jsx(Text,{color:\"gray.600\",fontSize:\"sm\",children:\"\\uAC01 \\uC694\\uB9AC\\uB97C \\uD074\\uB9AD\\uD558\\uBA74 \\uC0C1\\uC138 \\uC870\\uB9AC\\uBC95\\uACFC \\uC7AC\\uB8CC \\uC815\\uBCF4\\uB97C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC5B4\\uC694\"})]})})}),/*#__PURE__*/_jsxs(Tabs,{isFitted:true,variant:\"soft-rounded\",colorScheme:\"teal\",bg:\"white\",p:4,borderRadius:\"xl\",shadow:\"sm\",children:[/*#__PURE__*/_jsxs(TabList,{mb:\"1em\",bg:\"gray.50\",borderRadius:\"lg\",p:1,children:[/*#__PURE__*/_jsx(Tab,{_selected:{bg:\"white\",shadow:\"sm\"},children:\"\\uD83C\\uDF05 \\uC544\\uCE68\"}),/*#__PURE__*/_jsx(Tab,{_selected:{bg:\"white\",shadow:\"sm\"},children:\"\\u2600\\uFE0F \\uC810\\uC2EC\"}),/*#__PURE__*/_jsx(Tab,{_selected:{bg:\"white\",shadow:\"sm\"},children:\"\\uD83C\\uDF19 \\uC800\\uB141\"})]}),/*#__PURE__*/_jsxs(TabPanels,{children:[/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsx(VStack,{spacing:3,align:\"stretch\",children:mealTypeRecipes.breakfast.map(recipe=>/*#__PURE__*/_jsx(CompactRecipeCard,{recipe:recipe},recipe.id))})}),/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsx(VStack,{spacing:3,align:\"stretch\",children:mealTypeRecipes.lunch.map(recipe=>/*#__PURE__*/_jsx(CompactRecipeCard,{recipe:recipe},recipe.id))})}),/*#__PURE__*/_jsx(TabPanel,{children:/*#__PURE__*/_jsx(VStack,{spacing:3,align:\"stretch\",children:mealTypeRecipes.dinner.map(recipe=>/*#__PURE__*/_jsx(CompactRecipeCard,{recipe:recipe},recipe.id))})})]})]}),/*#__PURE__*/_jsx(HStack,{spacing:4,justify:\"center\",children:/*#__PURE__*/_jsx(Button,{colorScheme:\"gray\",variant:\"outline\",size:\"lg\",onClick:handleBackToInput,leftIcon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),children:\"\\uB2E4\\uC2DC \\uC785\\uB825\\uD558\\uAE30\"})}),/*#__PURE__*/_jsx(Box,{bg:\"green.50\",p:4,borderRadius:\"md\",border:\"1px\",borderColor:\"green.200\",children:/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"green.800\",textAlign:\"center\",children:[\"\\uD83C\\uDF73 \",/*#__PURE__*/_jsx(\"strong\",{children:\"\\uB808\\uC2DC\\uD53C \\uAE30\\uBC18 \\uB9DE\\uCDA4 \\uC2DD\\uB2E8!\"}),\" \\uAC01 \\uC694\\uB9AC\\uC758 \\uC7AC\\uB8CC\\uB97C \\uD074\\uB9AD\\uD558\\uBA74 \\uC0C1\\uC138 \\uC815\\uBCF4\\uB97C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC5B4\\uC694. \\uC870\\uB9AC\\uBC95\\uC744 \\uB530\\uB77C\\uD558\\uBA74 \",userProfile.goal==='weight_loss'?'다이어트':userProfile.goal==='muscle_gain'?'근성장':'건강 유지',\"\\uC5D0 \\uCD5C\\uC801\\uD654\\uB41C \\uB9DB\\uC788\\uB294 \\uC694\\uB9AC\\uAC00 \\uC644\\uC131\\uB429\\uB2C8\\uB2E4! \\uD83D\\uDCAA\"]})})]})})});};export default RecommendationScreen;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Box","Container","VStack","HStack","Text","Button","Card","CardBody","Heading","Image","Badge","Grid","GridItem","Progress","useToast","Icon","Accordion","AccordionItem","AccordionButton","AccordionPanel","AccordionIcon","Tabs","TabList","TabPanels","Tab","TabPanel","Circle","ArrowBackIcon","ExternalLinkIcon","TimeIcon","useAppContext","getRecipesByGoal","getRecipeIngredients","recipeLoader","calculateRecipeFrequency","debugRecipeMapping","Layout","jsx","_jsx","jsxs","_jsxs","RecommendationScreen","_recipeStats$totalRec","_recipeStats$avgViews","navigate","toast","userInput","recommendationResult","setSelectedProduct","userProfile","recommendedRecipes","setRecommendedRecipes","isLoadingRecipes","setIsLoadingRecipes","recipeStats","setRecipeStats","title","description","status","duration","isClosable","loadRecipes","console","log","diagnoseCacheStatus","userGoal","goal","recipes","length","map","r","id","error","stats","getStatistics","totalRecipes","Error","message","stack","children","maxW","py","textAlign","totalBudgetUsed","budgetRemaining","nutritionBalance","nutritionTargets","userInsights","mealTypeRecipes","breakfast","filter","mealType","lunch","dinner","handleProductClick","product","concat","handleBackToInput","budgetUsagePercentage","budget","CompactRecipeCard","_ref","recipe","showAllIngredients","setShowAllIngredients","showAllInstructions","setShowAllInstructions","ingredients","totalPrice","reduce","sum","ing","price","recipeFrequency","totalNutrition","total","ratio","quantity","calories","nutrition","carb","protein","fat","sodium","sugar","borderRadius","overflow","shadow","_hover","transform","transition","bg","border","borderColor","p","spacing","align","position","flexShrink","src","image","alt","name","w","h","objectFit","fallbackSrc","top","right","colorScheme","difficulty","size","flex","color","fontWeight","noOfLines","fontSize","lineHeight","wrap","boxSize","cookingTime","toLocaleString","variant","toFixed","justify","minPossibleRecipes","totalCostPerRecipe","budgetPerMeal","minW","Math","round","dailyCalorieGoal","mb","slice","ingredient","index","ingredientCalories","contribution","split","unit","boxShadow","tags","tag","allowToggle","px","_expanded","justifyContent","mr","cursor","onClick","imageUrl","mt","borderWidth","ingredientAnalysis","find","analysis","productName","productPackageSize","maxRecipesFromThisIngredient","costPerRecipe","as","flavorProfile","taste","idx","intensity","fontStyle","cookingTips","cooking","tip","nutritionHighlights","mainBenefits","benefit","calorieContext","chefTips","userRatings","overall","reviewCount","instructions","step","substring","leftIcon","opacity","templateColumns","gap","avgViews","avgScraps","abs","value","min","base","md","alignItems","proteinNeeds","borderTop","isIndeterminate","isFitted","_selected"],"sources":["/Users/kim_seung_bin/Desktop/ksb/public/dev/kkssbbb-github-repo/SmartMealPlanner_front/src/components/RecommendationScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  VStack,\n  HStack,\n  Text,\n  Button,\n  Card,\n  CardBody,\n  Heading,\n  Image,\n  Badge,\n  Grid,\n  GridItem,\n  Progress,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  useToast,\n  Icon,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n  OrderedList,\n  ListItem,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Circle,\n} from '@chakra-ui/react';\nimport { ArrowBackIcon, ExternalLinkIcon, TimeIcon, InfoIcon } from '@chakra-ui/icons';\nimport { useAppContext } from '../context/AppContext';\nimport { CoupangProduct, Recipe } from '../types';\nimport { getRecipesByGoal, getRecipeIngredients, recipeLoader } from '../data/recipeData';\nimport { calculateRecipeFrequency } from '../utils/personalizedRecommendation';\nimport { debugRecipeMapping } from '../utils/recipeDebugger';\n\nimport Layout from './Layout/Layout';\n\nconst RecommendationScreen: React.FC = () => {\n  const navigate = useNavigate();\n  const toast = useToast();\n  const {\n    userInput,\n    recommendationResult,\n    setSelectedProduct,\n    userProfile // 사용자 목표 정보 가져오기\n  } = useAppContext();\n\n  // 🍳 사용자 목표에 맞는 레시피 가져오기 (비동기) - hooks를 조건부 리턴 전에 선언\n  const [recommendedRecipes, setRecommendedRecipes] = useState<Recipe[]>([]);\n  const [isLoadingRecipes, setIsLoadingRecipes] = useState(true);\n  const [recipeStats, setRecipeStats] = useState<any>(null);\n  \n  useEffect(() => {\n    // 추천 결과가 없으면 메인 페이지로 리다이렉트\n    if (!recommendationResult) {\n      toast({\n        title: \"추천 결과를 찾을 수 없습니다\",\n        description: \"메인 페이지로 돌아가서 다시 시도해주세요.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n      navigate('/');\n      return;\n    }\n    \n    const loadRecipes = async () => {\n      setIsLoadingRecipes(true);\n      try {\n        // 🔍 디버깅 실행\n        console.log('🔍 === 레시피 매핑 디버깅 시작 ===');\n        debugRecipeMapping();\n        \n        // 캐시 진단\n        console.log('🔍 === 캐시 진단 시작 ===');\n        await recipeLoader.diagnoseCacheStatus();\n        \n        // 사용자 목표 확인 및 설정\n        const userGoal = userProfile.goal || 'maintenance';\n        console.log('🎯 사용자 목표:', userGoal);\n        \n        // 목표가 없으면 기본값으로 설정\n        if (!userProfile.goal) {\n          console.log('⚠️ 사용자 목표가 설정되지 않음, 기본값(maintenance)으로 설정');\n        }\n        \n        // 레시피 로드\n        const recipes = await getRecipesByGoal(userGoal);\n        console.log('📋 로드된 레시피 수:', recipes.length);\n        console.log('📋 레시피 ID들:', recipes.map(r => r.id));\n        \n        if (recipes.length === 0) {\n          console.error('⚠️ 레시피가 하나도 로드되지 않았습니다!');\n          console.log('💡 CSV 파일이 제대로 로드되는지 네트워크 탭에서 확인하세요');\n          console.log('💡 브라우저 콘솔에서 에러 메시지를 확인하세요');\n          \n          // 통계 정보로 CSV 로드 여부 확인\n          const stats = await recipeLoader.getStatistics();\n          console.log('📊 CSV 통계:', stats);\n          if (stats.totalRecipes === 0) {\n            console.error('❌ CSV 파일이 로드되지 않았습니다!');\n          }\n        }\n        \n        setRecommendedRecipes(recipes);\n        \n        // 통계 정보 로드\n        const stats = await recipeLoader.getStatistics();\n        setRecipeStats(stats);\n      } catch (error) {\n        console.error('❌ 레시피 로드 실패:', error);\n        \n        // 에러 상세 정보\n        if (error instanceof Error) {\n          console.error('에러 메시지:', error.message);\n          console.error('에러 스택:', error.stack);\n        }\n        \n        // 빈 배열로 설정하여 UI 크래시 방지\n        setRecommendedRecipes([]);\n      } finally {\n        setIsLoadingRecipes(false);\n      }\n    };\n    \n    loadRecipes();\n  }, [userProfile.goal]);\n\n  // recommendationResult가 없으면 로딩 상태 표시\n  if (!recommendationResult) {\n    return (\n      <Layout>\n        <Container maxW=\"container.xl\" py={8}>\n          <Text textAlign=\"center\">로딩 중...</Text>\n        </Container>\n      </Layout>\n    );\n  }\n\n  const { \n    totalBudgetUsed, \n    budgetRemaining, \n    nutritionBalance, \n    message, \n    nutritionTargets,\n    userInsights \n  } = recommendationResult;\n  \n  // 시간대별 레시피 분류\n  const mealTypeRecipes = {\n    breakfast: recommendedRecipes.filter(r => r.mealType === 'breakfast'),\n    lunch: recommendedRecipes.filter(r => r.mealType === 'lunch'),\n    dinner: recommendedRecipes.filter(r => r.mealType === 'dinner'),\n  };\n\n  // 상품 클릭 핸들러\n  const handleProductClick = (product: CoupangProduct) => {\n    setSelectedProduct(product);\n    navigate(`/product/${product.id}`);\n  };\n\n  // 다시 입력하기 핸들러\n  const handleBackToInput = () => {\n    navigate('/');\n  };\n\n  const budgetUsagePercentage = (totalBudgetUsed / userInput.budget) * 100;\n\n  // 🎨 컴팩트 레시피 카드 컴포넌트\n  const CompactRecipeCard: React.FC<{ recipe: Recipe }> = ({ recipe }) => {\n    const [showAllIngredients, setShowAllIngredients] = useState(false);\n    const [showAllInstructions, setShowAllInstructions] = useState(false);\n    const ingredients = getRecipeIngredients(recipe.id);\n    const totalPrice = ingredients.reduce((sum: number, ing: any) => sum + ing.product.price, 0);\n    \n    // 🍽️ 레시피 제조 빈도 분석\n    const recipeFrequency = calculateRecipeFrequency(recipe.id);\n    \n    // 🧮 영양소 계산 (재료별 영양소 × 사용량)\n    const totalNutrition = ingredients.reduce((total: any, ing: any) => {\n      const product = ing.product;\n      const ratio = ing.quantity / 100; // 100g 기준으로 계산\n      \n      return {\n        calories: total.calories + (product.nutrition.calories * ratio),\n        carb: total.carb + (product.nutrition.carb * ratio),\n        protein: total.protein + (product.nutrition.protein * ratio),\n        fat: total.fat + (product.nutrition.fat * ratio),\n        sodium: total.sodium + (product.nutrition.sodium * ratio),\n        sugar: total.sugar + (product.nutrition.sugar * ratio),\n      };\n    }, {\n      calories: 0,\n      carb: 0,\n      protein: 0,\n      fat: 0,\n      sodium: 0,\n      sugar: 0,\n    });\n\n    return (\n      <Card \n        borderRadius=\"xl\" \n        overflow=\"hidden\" \n        shadow=\"md\"\n        _hover={{ transform: \"translateY(-2px)\", shadow: \"lg\" }}\n        transition=\"all 0.2s ease\"\n        bg=\"white\"\n        border=\"1px\"\n        borderColor=\"gray.200\"\n      >\n        <CardBody p={4}>\n          <HStack spacing={4} align=\"start\">\n            {/* 📸 컴팩트 이미지 */}\n            <Box position=\"relative\" flexShrink={0}>\n              <Image \n                src={recipe.image} \n                alt={recipe.name} \n                w=\"120px\" \n                h=\"120px\" \n                objectFit=\"cover\" \n                borderRadius=\"lg\"\n                fallbackSrc=\"https://via.placeholder.com/120x120?text=🍽️\"\n              />\n              <Badge \n                position=\"absolute\" \n                top={2} \n                right={2} \n                colorScheme={recipe.difficulty === 'easy' ? 'green' : recipe.difficulty === 'medium' ? 'orange' : 'red'} \n                size=\"sm\" \n                borderRadius=\"md\"\n              >\n                {recipe.difficulty === 'easy' ? '쉬움' : recipe.difficulty === 'medium' ? '보통' : '어려움'}\n              </Badge>\n            </Box>\n\n            {/* 📝 레시피 정보 */}\n            <VStack spacing={3} align=\"stretch\" flex={1}>\n              <VStack spacing={2} align=\"stretch\">\n                <Heading size=\"md\" color=\"gray.800\" fontWeight=\"600\" noOfLines={1}>\n                  {recipe.name}\n                </Heading>\n                <Text color=\"gray.600\" fontSize=\"sm\" noOfLines={2} lineHeight=\"1.4\">\n                  {recipe.description}\n                </Text>\n                \n                {/* 핵심 정보 컴팩트 표시 */}\n                <HStack spacing={4} wrap=\"wrap\">\n                  <HStack spacing={1}>\n                    <TimeIcon boxSize={3} color=\"orange.500\" />\n                    <Text fontSize=\"xs\" fontWeight=\"medium\">{recipe.cookingTime}분</Text>\n                  </HStack>\n                  <Text fontSize=\"xs\" color=\"gray.500\">재료 {ingredients.length}개</Text>\n                  <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"teal.600\">\n                    {totalPrice.toLocaleString()}원\n                  </Text>\n                  <Badge colorScheme=\"blue\" size=\"sm\" variant=\"subtle\">\n                    예산 {((totalPrice / userInput.budget) * 100).toFixed(0)}%\n                  </Badge>\n                </HStack>\n\n                {/* 🍽️ 제조 가능 횟수 정보 - 대시보드 연계 디자인 */}\n                <Card bg=\"linear-gradient(135deg, #4299e1 0%, #3182ce 100%)\" borderRadius=\"lg\" overflow=\"hidden\">\n                  <CardBody p={3}>\n                    <HStack spacing={3} justify=\"space-between\" align=\"center\">\n                      <VStack spacing={0} align=\"start\">\n                        <HStack spacing={2}>\n                          <Text fontSize=\"lg\">📦</Text>\n                          <Text fontSize=\"xs\" color=\"white\" fontWeight=\"medium\">\n                            구매 후 제조 가능\n                          </Text>\n                        </HStack>\n                        <HStack spacing={1}>\n                          <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"white\">\n                            {recipeFrequency.minPossibleRecipes}\n                          </Text>\n                          <Text fontSize=\"sm\" color=\"whiteAlpha.800\">번</Text>\n                          <Text fontSize=\"xs\" color=\"whiteAlpha.600\">\n                            (최소 기준)\n                          </Text>\n                        </HStack>\n                      </VStack>\n                      <VStack spacing={0} align=\"end\">\n                        <Text fontSize=\"xs\" color=\"whiteAlpha.700\">\n                          1회당 비용\n                        </Text>\n                        <Text fontSize=\"lg\" fontWeight=\"bold\" color=\"yellow.200\">\n                          {recipeFrequency.totalCostPerRecipe.toLocaleString()}원\n                        </Text>\n                        <Text fontSize=\"xs\" color=\"whiteAlpha.600\">\n                          끼니 예산: {userInsights?.budgetPerMeal.toLocaleString()}원\n                        </Text>\n                      </VStack>\n                    </HStack>\n                  </CardBody>\n                </Card>\n\n                {/* 🔥 영양정보 섹션 - 대시보드 연계 디자인 */}\n                <Card bg=\"linear-gradient(135deg, #38b2ac 0%, #319795 100%)\" borderRadius=\"lg\" overflow=\"hidden\">\n                  <CardBody p={3}>\n                    <VStack spacing={3}>\n                      {/* 헤더 */}\n                      <HStack spacing={2} w=\"full\" justify=\"center\">\n                        <Text fontSize=\"lg\">🍎</Text>\n                        <Text fontSize=\"sm\" color=\"white\" fontWeight=\"bold\">\n                          1회분 영양정보\n                        </Text>\n                        <Text fontSize=\"xs\" color=\"whiteAlpha.700\">\n                          (일일목표 대비)\n                        </Text>\n                      </HStack>\n                      \n                      {/* 총 영양정보 */}\n                      <HStack justify=\"space-between\" align=\"center\" wrap=\"wrap\" w=\"full\">\n                        <VStack spacing={1} align=\"center\" bg=\"whiteAlpha.200\" p={2} borderRadius=\"md\" minW=\"65px\">\n                          <Text fontSize=\"xs\" color=\"whiteAlpha.800\">총 칼로리</Text>\n                          <Text fontSize=\"lg\" fontWeight=\"bold\" color=\"white\">\n                            {Math.round(totalNutrition.calories)}\n                          </Text>\n                          <Text fontSize=\"xs\" color=\"whiteAlpha.700\">kcal</Text>\n                          {userInsights && (\n                            <Text fontSize=\"xs\" color=\"yellow.200\">\n                              {((totalNutrition.calories / userInsights.dailyCalorieGoal) * 100).toFixed(0)}%\n                            </Text>\n                          )}\n                        </VStack>\n                        \n                        <VStack spacing={1} align=\"center\" bg=\"whiteAlpha.200\" p={2} borderRadius=\"md\" minW=\"50px\">\n                          <Text fontSize=\"xs\" color=\"whiteAlpha.800\">탄수화물</Text>\n                          <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"white\">\n                            {Math.round(totalNutrition.carb)}g\n                          </Text>\n                          <Text fontSize=\"xs\" color=\"orange.200\">\n                            {totalNutrition.calories > 0 ? Math.round((totalNutrition.carb * 4 / totalNutrition.calories) * 100) : 0}%\n                          </Text>\n                        </VStack>\n                        \n                        <VStack spacing={1} align=\"center\" bg=\"whiteAlpha.200\" p={2} borderRadius=\"md\" minW=\"50px\">\n                          <Text fontSize=\"xs\" color=\"whiteAlpha.800\">단백질</Text>\n                          <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"white\">\n                            {Math.round(totalNutrition.protein)}g\n                          </Text>\n                          <Text fontSize=\"xs\" color=\"red.200\">\n                            {totalNutrition.calories > 0 ? Math.round((totalNutrition.protein * 4 / totalNutrition.calories) * 100) : 0}%\n                          </Text>\n                        </VStack>\n                        \n                        <VStack spacing={1} align=\"center\" bg=\"whiteAlpha.200\" p={2} borderRadius=\"md\" minW=\"50px\">\n                          <Text fontSize=\"xs\" color=\"whiteAlpha.800\">지방</Text>\n                          <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"white\">\n                            {Math.round(totalNutrition.fat)}g\n                          </Text>\n                          <Text fontSize=\"xs\" color=\"green.200\">\n                            {totalNutrition.calories > 0 ? Math.round((totalNutrition.fat * 9 / totalNutrition.calories) * 100) : 0}%\n                          </Text>\n                        </VStack>\n                      </HStack>\n\n                      {/* 📊 재료별 칼로리 기여도 시각화 */}\n                      <Box w=\"full\" bg=\"whiteAlpha.200\" p={3} borderRadius=\"md\">\n                        <HStack spacing={2} mb={2}>\n                          <Text fontSize=\"lg\">📊</Text>\n                          <Text fontSize=\"xs\" color=\"white\" fontWeight=\"bold\">재료별 칼로리 기여도</Text>\n                        </HStack>\n                        <VStack spacing={1} align=\"stretch\">\n                          {ingredients.slice(0, 4).map((ingredient: any, index: number) => {\n                            const ingredientCalories = Math.round(ingredient.product.nutrition.calories * ingredient.quantity / 100);\n                            const contribution = totalNutrition.calories > 0 ? (ingredientCalories / totalNutrition.calories) * 100 : 0;\n                            return (\n                              <HStack key={index} spacing={2} align=\"center\">\n                                <Text fontSize=\"xs\" color=\"whiteAlpha.900\" minW=\"70px\" noOfLines={1} fontWeight=\"medium\">\n                                  {ingredient.product.name.split(' ')[0]} {ingredient.quantity}{ingredient.unit}\n                                </Text>\n                                <Box flex={1} bg=\"whiteAlpha.400\" borderRadius=\"full\" h=\"6px\" position=\"relative\">\n                                  <Box \n                                    bg={index === 0 ? \"yellow.300\" : index === 1 ? \"orange.300\" : index === 2 ? \"red.300\" : \"green.300\"}\n                                    h=\"full\" \n                                    borderRadius=\"full\" \n                                    w={`${contribution}%`}\n                                    boxShadow=\"inset 0 1px 0 rgba(255,255,255,0.3)\"\n                                  />\n                                </Box>\n                                <Text fontSize=\"xs\" color=\"white\" minW=\"35px\" fontWeight=\"bold\">\n                                  {ingredientCalories}kcal\n                                </Text>\n                                <Text fontSize=\"xs\" color=\"yellow.200\" minW=\"30px\" fontWeight=\"bold\">\n                                  {Math.round(contribution)}%\n                                </Text>\n                              </HStack>\n                            );\n                          })}\n                        </VStack>\n                      </Box>\n                    </VStack>\n                  </CardBody>\n                </Card>\n\n                {/* 태그는 최대 3개만 표시 */}\n                <HStack spacing={1} wrap=\"wrap\">\n                  {recipe.tags.slice(0, 3).map((tag, index) => (\n                    <Badge key={index} size=\"sm\" colorScheme=\"teal\" variant=\"outline\" borderRadius=\"md\" fontSize=\"xs\">\n                      #{tag}\n                    </Badge>\n                  ))}\n                  {recipe.tags.length > 3 && (\n                    <Text fontSize=\"xs\" color=\"gray.400\">+{recipe.tags.length - 3}</Text>\n                  )}\n                </HStack>\n              </VStack>\n            </VStack>\n\n            {/* 🎯 레시피 상세 정보 */}\n            <VStack spacing={2} flexShrink={0}>\n              <Accordion allowToggle w=\"full\">\n                <AccordionItem border=\"none\">\n                  <AccordionButton \n                    borderRadius=\"lg\"\n                    bg=\"linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)\"\n                    border=\"1px solid\"\n                    borderColor=\"gray.300\"\n                    px={3}\n                    py={2}\n                    fontSize=\"xs\"\n                    fontWeight=\"bold\"\n                    color=\"gray.700\"\n                    _hover={{ bg: \"linear-gradient(135deg, #cbd5e0 0%, #a0aec0 100%)\", transform: \"translateY(-1px)\" }}\n                    _expanded={{ bg: \"linear-gradient(135deg, #a0aec0 0%, #718096 100%)\", color: \"white\" }}\n                    justifyContent=\"center\"\n                    transition=\"all 0.2s ease\"\n                  >\n                    <Text fontSize=\"xs\" mr={2}>상세보기</Text>\n                    <AccordionIcon />\n                  </AccordionButton>\n                  <AccordionPanel px={0} py={3}>\n                    <VStack spacing={3} align=\"stretch\">\n                      {/* 간단한 재료 목록 */}\n                      <Box>\n                        <HStack justify=\"space-between\" align=\"center\" mb={3}>\n                          <Text fontSize=\"sm\" fontWeight=\"medium\" color=\"gray.700\">\n                            🛒 필요한 재료\n                          </Text>\n                          <Card bg=\"gray.50\" size=\"sm\" borderRadius=\"md\">\n                            <CardBody p={2}>\n                              <HStack spacing={2}>\n                                <Text fontSize=\"xs\" color=\"orange.600\" fontWeight=\"bold\">\n                                  총 {Math.round(totalNutrition.calories)}kcal\n                                </Text>\n                                <Text fontSize=\"xs\" color=\"gray.500\">|</Text>\n                                <Text fontSize=\"xs\" color=\"blue.600\">\n                                  탄{Math.round(totalNutrition.carb)}g\n                                </Text>\n                                <Text fontSize=\"xs\" color=\"red.600\">\n                                  단{Math.round(totalNutrition.protein)}g\n                                </Text>\n                                <Text fontSize=\"xs\" color=\"green.600\">\n                                  지{Math.round(totalNutrition.fat)}g\n                                </Text>\n                              </HStack>\n                            </CardBody>\n                          </Card>\n                        </HStack>\n                        <VStack spacing={2} align=\"stretch\">\n                          {(showAllIngredients ? ingredients : ingredients.slice(0, 3)).map((ingredient: any, index: number) => (\n                            <HStack \n                              key={index} \n                              spacing={3} \n                              p={2} \n                              bg=\"gray.50\" \n                              borderRadius=\"md\" \n                              cursor=\"pointer\" \n                              _hover={{ bg: \"gray.100\" }} \n                              onClick={() => handleProductClick(ingredient.product)}\n                            >\n                              <Image \n                                src={ingredient.product.imageUrl} \n                                alt={ingredient.product.name} \n                                boxSize=\"40px\" \n                                objectFit=\"cover\" \n                                borderRadius=\"md\" \n                                fallbackSrc=\"https://via.placeholder.com/40x40?text=🛒\" \n                              />\n                              <VStack align=\"start\" spacing={0} flex={1}>\n                                <Text fontSize=\"xs\" fontWeight=\"medium\" noOfLines={1}>\n                                  {ingredient.product.name}\n                                </Text>\n                                <HStack spacing={2}>\n                                  <Text fontSize=\"xs\" color=\"gray.600\">\n                                    {ingredient.quantity}{ingredient.unit}\n                                  </Text>\n                                  <Text fontSize=\"xs\" fontWeight=\"bold\" color=\"red.500\">\n                                    {ingredient.product.price.toLocaleString()}원\n                                  </Text>\n                                </HStack>\n                                {/* 🧮 재료별 상세 영양정보 및 기여도 */}\n                                <VStack spacing={1} mt={2} align=\"stretch\">\n                                  <HStack spacing={2} justify=\"space-between\">\n                                    <Text fontSize=\"xs\" color=\"gray.600\" fontWeight=\"medium\">\n                                      📊 {ingredient.quantity}{ingredient.unit} 영양정보\n                                    </Text>\n                                    <Text fontSize=\"xs\" color=\"gray.500\">\n                                      ({Math.round((ingredient.product.nutrition.calories * ingredient.quantity / 100 / totalNutrition.calories) * 100)}% 기여)\n                                    </Text>\n                                  </HStack>\n                                  <HStack spacing={3} wrap=\"wrap\">\n                                    <VStack spacing={0} align=\"center\" minW=\"45px\">\n                                      <Text fontSize=\"xs\" color=\"orange.600\" fontWeight=\"bold\">\n                                        {Math.round(ingredient.product.nutrition.calories * ingredient.quantity / 100)}\n                                      </Text>\n                                      <Text fontSize=\"xs\" color=\"gray.500\">kcal</Text>\n                                    </VStack>\n                                    <VStack spacing={0} align=\"center\" minW=\"35px\">\n                                      <Text fontSize=\"xs\" color=\"blue.600\" fontWeight=\"bold\">\n                                        {Math.round(ingredient.product.nutrition.carb * ingredient.quantity / 100)}g\n                                      </Text>\n                                      <Text fontSize=\"xs\" color=\"gray.500\">탄</Text>\n                                    </VStack>\n                                    <VStack spacing={0} align=\"center\" minW=\"35px\">\n                                      <Text fontSize=\"xs\" color=\"red.600\" fontWeight=\"bold\">\n                                        {Math.round(ingredient.product.nutrition.protein * ingredient.quantity / 100)}g\n                                      </Text>\n                                      <Text fontSize=\"xs\" color=\"gray.500\">단</Text>\n                                    </VStack>\n                                    <VStack spacing={0} align=\"center\" minW=\"35px\">\n                                      <Text fontSize=\"xs\" color=\"green.600\" fontWeight=\"bold\">\n                                        {Math.round(ingredient.product.nutrition.fat * ingredient.quantity / 100)}g\n                                      </Text>\n                                      <Text fontSize=\"xs\" color=\"gray.500\">지</Text>\n                                    </VStack>\n                                  </HStack>\n                                  \n                                  {/* 🍽️ 재료별 제조 가능 횟수 */}\n                                  <Box mt={2} p={2} bg=\"teal.50\" borderRadius=\"md\" borderWidth={1} borderColor=\"teal.200\">\n                                    {(() => {\n                                      const ingredientAnalysis = recipeFrequency.ingredientAnalysis.find(\n                                        analysis => analysis.productName === ingredient.product.name\n                                      );\n                                      return ingredientAnalysis ? (\n                                        <VStack spacing={1} align=\"stretch\">\n                                          <HStack justify=\"space-between\" align=\"center\">\n                                            <Text fontSize=\"xs\" color=\"teal.700\" fontWeight=\"medium\">\n                                              📦 구매 시\n                                            </Text>\n                                            <Text fontSize=\"xs\" color=\"gray.600\">\n                                              {ingredientAnalysis.productPackageSize}\n                                            </Text>\n                                          </HStack>\n                                          <HStack justify=\"space-between\" align=\"center\">\n                                            <Text fontSize=\"xs\" color=\"gray.600\">\n                                              이 재료로 가능:\n                                            </Text>\n                                            <HStack spacing={1}>\n                                              <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"teal.600\">\n                                                {ingredientAnalysis.maxRecipesFromThisIngredient}\n                                              </Text>\n                                              <Text fontSize=\"xs\" color=\"gray.600\">번</Text>\n                                            </HStack>\n                                          </HStack>\n                                          <HStack justify=\"space-between\" align=\"center\">\n                                            <Text fontSize=\"xs\" color=\"gray.600\">\n                                              1회당 재료비:\n                                            </Text>\n                                            <Text fontSize=\"xs\" fontWeight=\"bold\" color=\"red.600\">\n                                              {ingredientAnalysis.costPerRecipe.toLocaleString()}원\n                                            </Text>\n                                          </HStack>\n                                        </VStack>\n                                      ) : (\n                                        <Text fontSize=\"xs\" color=\"gray.500\">분석 정보 없음</Text>\n                                      );\n                                    })()}\n                                  </Box>\n                                </VStack>\n                              </VStack>\n                              <Icon as={ExternalLinkIcon} boxSize={3} color=\"gray.400\" />\n                            </HStack>\n                          ))}\n                          {ingredients.length > 3 && (\n                            <Button \n                              variant=\"ghost\" \n                              size=\"sm\" \n                              fontSize=\"xs\" \n                              color=\"teal.600\"\n                              _hover={{ bg: \"teal.50\" }}\n                              onClick={() => setShowAllIngredients(!showAllIngredients)}\n                            >\n                              {showAllIngredients \n                                ? \"접기\" \n                                : `+${ingredients.length - 3}개 재료 더보기`\n                              }\n                            </Button>\n                          )}\n                        </VStack>\n                      </Box>\n\n                      {/* 🍽️ 맛있는 레시피 정보 섹션 */}\n                      <VStack spacing={4} align=\"stretch\">\n                        {/* 맛 프로필 */}\n                        {recipe.flavorProfile && (\n                          <Box p={3} bg=\"purple.50\" borderRadius=\"md\" border=\"1px\" borderColor=\"purple.200\">\n                            <HStack spacing={2} mb={2}>\n                              <Text fontSize=\"lg\">👅</Text>\n                              <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"purple.700\">맛 프로필</Text>\n                            </HStack>\n                            <VStack spacing={2} align=\"stretch\">\n                              <HStack spacing={2} wrap=\"wrap\">\n                                {recipe.flavorProfile.taste.map((taste, idx) => (\n                                  <Badge key={idx} colorScheme=\"purple\" variant=\"subtle\" fontSize=\"xs\">\n                                    {taste}\n                                  </Badge>\n                                ))}\n                                <Badge colorScheme=\"gray\" variant=\"outline\" fontSize=\"xs\">\n                                  {recipe.flavorProfile.intensity === 'light' ? '순한맛' : \n                                   recipe.flavorProfile.intensity === 'medium' ? '보통맛' : '진한맛'}\n                                </Badge>\n                              </HStack>\n                              <Text fontSize=\"xs\" color=\"purple.600\" fontStyle=\"italic\">\n                                {recipe.flavorProfile.description}\n                              </Text>\n                            </VStack>\n                          </Box>\n                        )}\n\n                        {/* 조리 팁 */}\n                        {recipe.cookingTips && (\n                          <Box p={3} bg=\"blue.50\" borderRadius=\"md\" border=\"1px\" borderColor=\"blue.200\">\n                            <HStack spacing={2} mb={2}>\n                              <Text fontSize=\"lg\">💡</Text>\n                              <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"blue.700\">조리 팁</Text>\n                            </HStack>\n                            <VStack spacing={2} align=\"stretch\">\n                              {recipe.cookingTips.cooking.slice(0, 2).map((tip, idx) => (\n                                <HStack key={idx} spacing={2} align=\"start\">\n                                  <Text fontSize=\"xs\" color=\"blue.600\">•</Text>\n                                  <Text fontSize=\"xs\" color=\"blue.600\">{tip}</Text>\n                                </HStack>\n                              ))}\n                            </VStack>\n                          </Box>\n                        )}\n\n                        {/* 영양 하이라이트 */}\n                        {recipe.nutritionHighlights && (\n                          <Box p={3} bg=\"green.50\" borderRadius=\"md\" border=\"1px\" borderColor=\"green.200\">\n                            <HStack spacing={2} mb={2}>\n                              <Text fontSize=\"lg\">🌿</Text>\n                              <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"green.700\">영양 포인트</Text>\n                            </HStack>\n                            <VStack spacing={1} align=\"stretch\">\n                              {recipe.nutritionHighlights.mainBenefits.slice(0, 2).map((benefit, idx) => (\n                                <HStack key={idx} spacing={2} align=\"start\">\n                                  <Text fontSize=\"xs\" color=\"green.600\">✓</Text>\n                                  <Text fontSize=\"xs\" color=\"green.600\">{benefit}</Text>\n                                </HStack>\n                              ))}\n                              <Text fontSize=\"xs\" color=\"green.500\" fontWeight=\"medium\" mt={1}>\n                                {recipe.nutritionHighlights.calorieContext}\n                              </Text>\n                            </VStack>\n                          </Box>\n                        )}\n\n                        {/* 셰프 팁 */}\n                        {recipe.chefTips && recipe.chefTips.length > 0 && (\n                          <Box p={3} bg=\"yellow.50\" borderRadius=\"md\" border=\"1px\" borderColor=\"yellow.200\">\n                            <HStack spacing={2} mb={2}>\n                              <Text fontSize=\"lg\">👨‍🍳</Text>\n                              <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"yellow.700\">전문가 팁</Text>\n                            </HStack>\n                            <Text fontSize=\"xs\" color=\"yellow.600\" fontWeight=\"medium\">\n                              {recipe.chefTips[0]}\n                            </Text>\n                          </Box>\n                        )}\n\n                        {/* 평점 정보 */}\n                        {recipe.userRatings && (\n                          <Box p={3} bg=\"orange.50\" borderRadius=\"md\" border=\"1px\" borderColor=\"orange.200\">\n                            <HStack spacing={2} mb={2}>\n                              <Text fontSize=\"lg\">⭐</Text>\n                              <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"orange.700\">사용자 평가</Text>\n                            </HStack>\n                            <HStack spacing={4}>\n                              <VStack spacing={0} align=\"center\">\n                                <Text fontSize=\"lg\" fontWeight=\"bold\" color=\"orange.600\">\n                                  {recipe.userRatings.overall}\n                                </Text>\n                                <Text fontSize=\"xs\" color=\"gray.600\">전체</Text>\n                              </VStack>\n                              <VStack spacing={0} align=\"center\">\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"red.500\">\n                                  {recipe.userRatings.taste}\n                                </Text>\n                                <Text fontSize=\"xs\" color=\"gray.600\">맛</Text>\n                              </VStack>\n                              <VStack spacing={0} align=\"center\">\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"blue.500\">\n                                  {recipe.userRatings.difficulty}\n                                </Text>\n                                <Text fontSize=\"xs\" color=\"gray.600\">난이도</Text>\n                              </VStack>\n                              <VStack spacing={0} align=\"center\">\n                                <Text fontSize=\"sm\" fontWeight=\"bold\" color=\"green.500\">\n                                  {recipe.userRatings.nutrition}\n                                </Text>\n                                <Text fontSize=\"xs\" color=\"gray.600\">영양</Text>\n                              </VStack>\n                            </HStack>\n                            <Text fontSize=\"xs\" color=\"gray.500\" mt={2}>\n                              {recipe.userRatings.reviewCount.toLocaleString()}명이 평가했어요\n                            </Text>\n                          </Box>\n                        )}\n\n                        {/* 간단한 조리법 */}\n                        <Box>\n                          <Text fontSize=\"sm\" fontWeight=\"medium\" mb={2} color=\"gray.700\">\n                            👨‍🍳 조리 순서\n                          </Text>\n                          <VStack spacing={1} align=\"stretch\">\n                            {(showAllInstructions ? recipe.instructions : recipe.instructions.slice(0, 2)).map((step, index) => (\n                              <HStack key={index} spacing={2} align=\"start\">\n                                <Circle size=\"16px\" bg=\"orange.400\" color=\"white\" fontWeight=\"bold\" fontSize=\"xs\" flexShrink={0}>\n                                  {index + 1}\n                                </Circle>\n                                <Text fontSize=\"xs\" lineHeight=\"1.4\" color=\"gray.600\">\n                                  {step.length > 50 ? step.substring(0, 50) + '...' : step}\n                                </Text>\n                              </HStack>\n                            ))}\n                            {recipe.instructions.length > 2 && (\n                              <Button \n                                variant=\"ghost\" \n                                size=\"sm\" \n                                fontSize=\"xs\" \n                                color=\"orange.600\"\n                                _hover={{ bg: \"orange.50\" }}\n                                onClick={() => setShowAllInstructions(!showAllInstructions)}\n                              >\n                                {showAllInstructions \n                                  ? \"접기\" \n                                  : `+${recipe.instructions.length - 2}단계 더보기`\n                                }\n                              </Button>\n                            )}\n                          </VStack>\n                        </Box>\n                      </VStack>\n                    </VStack>\n                  </AccordionPanel>\n                </AccordionItem>\n              </Accordion>\n            </VStack>\n          </HStack>\n        </CardBody>\n      </Card>\n    );\n  };\n\n  return (\n    <Layout>\n      <Container maxW=\"6xl\" py={8}>\n        <VStack spacing={8} align=\"stretch\">\n          {/* 헤더 */}\n          <Card bg=\"gradient-to-r from-purple.500 to-pink.500\" color=\"white\" borderRadius=\"2xl\">\n            <CardBody p={6}>\n              <HStack justify=\"space-between\" align=\"center\">\n                <HStack spacing={4}>\n                  <Button \n                    leftIcon={<ArrowBackIcon />} \n                    variant=\"ghost\" \n                    color=\"white\" \n                    _hover={{ bg: \"whiteAlpha.200\" }} \n                    onClick={handleBackToInput}\n                  >\n                    다시 입력하기\n                  </Button>\n                  <VStack align=\"start\" spacing={1}>\n                    <Heading size=\"lg\">\n                      🍳 {userProfile.goal === 'weight_loss' ? '다이어트' : \n                          userProfile.goal === 'muscle_gain' ? '근성장' : '건강 유지'} 맞춤 레시피\n                    </Heading>\n                    <Text fontSize=\"sm\" opacity={0.9}>\n                      목표에 최적화된 맛있는 요리 레시피와 쿠팡 재료를 추천드려요\n                    </Text>\n                  </VStack>\n                </HStack>\n              </HStack>\n            </CardBody>\n          </Card>\n\n          {/* 📊 만개의 레시피 실시간 통계 */}\n          {recipeStats && (\n            <Card bg=\"purple.50\" borderRadius=\"xl\" shadow=\"md\" mb={6}>\n              <CardBody>\n                <HStack spacing={2} mb={4}>\n                  <Text fontSize=\"2xl\">📊</Text>\n                  <Heading size=\"md\" color=\"purple.700\">만개의 레시피 실시간 데이터</Heading>\n                </HStack>\n                <Grid templateColumns=\"repeat(auto-fit, minmax(150px, 1fr))\" gap={4}>\n                  <GridItem>\n                    <VStack p={3} bg=\"white\" borderRadius=\"lg\" border=\"1px\" borderColor=\"purple.200\">\n                      <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"purple.600\">\n                        {recipeStats.totalRecipes?.toLocaleString() || 0}\n                      </Text>\n                      <Text fontSize=\"xs\" color=\"gray.600\">총 레시피</Text>\n                    </VStack>\n                  </GridItem>\n                  <GridItem>\n                    <VStack p={3} bg=\"white\" borderRadius=\"lg\" border=\"1px\" borderColor=\"purple.200\">\n                      <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"blue.600\">\n                        {recipeStats.avgViews?.toLocaleString() || 0}\n                      </Text>\n                      <Text fontSize=\"xs\" color=\"gray.600\">평균 조회수</Text>\n                    </VStack>\n                  </GridItem>\n                  <GridItem>\n                    <VStack p={3} bg=\"white\" borderRadius=\"lg\" border=\"1px\" borderColor=\"purple.200\">\n                      <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"orange.600\">\n                        {recipeStats.avgScraps || 0}\n                      </Text>\n                      <Text fontSize=\"xs\" color=\"gray.600\">평균 스크랩</Text>\n                    </VStack>\n                  </GridItem>\n                  <GridItem>\n                    <VStack p={3} bg=\"white\" borderRadius=\"lg\" border=\"1px\" borderColor=\"purple.200\">\n                      <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"green.600\">\n                        {recommendedRecipes.length}\n                      </Text>\n                      <Text fontSize=\"xs\" color=\"gray.600\">추천 레시피</Text>\n                    </VStack>\n                  </GridItem>\n                </Grid>\n              </CardBody>\n            </Card>\n          )}\n\n          {/* 🎯 통합 스마트 대시보드 */}\n          <Card bg=\"linear-gradient(135deg, #4299e1 0%, #3182ce 50%, #2b77cb 100%)\" borderRadius=\"2xl\" shadow=\"2xl\" border=\"none\" overflow=\"hidden\">\n            <CardBody p={0}>\n              {/* 상단: 핵심 지표 영역 */}\n              <Box bg=\"whiteAlpha.100\" p={6}>\n                <VStack spacing={4}>\n                  <HStack justify=\"center\" spacing={3}>\n                    <Text fontSize=\"2xl\">💰</Text>\n                    <Heading size=\"lg\" color=\"white\" textAlign=\"center\">\n                      월간 식단 예산 현황\n                    </Heading>\n                  </HStack>\n                  \n                  {/* 예산 진행률 시각화 */}\n                  <Box w=\"full\" maxW=\"600px\">\n                    <HStack justify=\"space-between\" align=\"end\" mb={3}>\n                      <VStack spacing={0} align=\"start\">\n                        <Text fontSize=\"xs\" color=\"whiteAlpha.700\">사용된 예산</Text>\n                        <Text fontSize=\"2xl\" fontWeight=\"bold\" color=\"white\">\n                          {totalBudgetUsed.toLocaleString()}원\n                        </Text>\n                      </VStack>\n                      <VStack spacing={0} align=\"center\">\n                        <Text fontSize=\"xs\" color=\"whiteAlpha.700\">진행률</Text>\n                        <Text fontSize=\"lg\" fontWeight=\"bold\" color={budgetUsagePercentage > 100 ? \"red.200\" : \"green.200\"}>\n                          {budgetUsagePercentage.toFixed(0)}%\n                        </Text>\n                      </VStack>\n                      <VStack spacing={0} align=\"end\">\n                        <Text fontSize=\"xs\" color=\"whiteAlpha.700\">\n                          {budgetRemaining < 0 ? \"초과 금액\" : \"남은 예산\"}\n                        </Text>\n                        <Text fontSize=\"2xl\" fontWeight=\"bold\" color={budgetRemaining < 0 ? \"red.200\" : \"green.200\"}>\n                          {Math.abs(budgetRemaining).toLocaleString()}원\n                        </Text>\n                      </VStack>\n                    </HStack>\n                    \n                    {/* 예산 진행 바 */}\n                    <Box>\n                      <Progress \n                        value={Math.min(budgetUsagePercentage, 100)} \n                        colorScheme={budgetUsagePercentage > 100 ? \"red\" : budgetUsagePercentage > 80 ? \"yellow\" : \"green\"}\n                        size=\"lg\" \n                        borderRadius=\"full\"\n                        bg=\"whiteAlpha.300\"\n                      />\n                      {budgetUsagePercentage > 100 && (\n                        <HStack mt={2} spacing={2}>\n                          <Text fontSize=\"xs\" color=\"red.200\">⚠️</Text>\n                          <Text fontSize=\"xs\" color=\"red.200\">\n                            예산을 {(budgetUsagePercentage - 100).toFixed(1)}% 초과했어요\n                          </Text>\n                        </HStack>\n                      )}\n                    </Box>\n                  </Box>\n                </VStack>\n              </Box>\n              \n              {/* 하단: 영양 균형 & 개인 정보 */}\n              <Box bg=\"whiteAlpha.50\" p={6}>\n                <Grid templateColumns={{ base: \"1fr\", md: \"2fr 1fr\" }} gap={8} alignItems=\"start\">\n                  {/* 영양 균형 */}\n                  <Box>\n                    <HStack spacing={3} mb={4}>\n                      <Text fontSize=\"xl\">🍎</Text>\n                      <Heading size=\"md\" color=\"white\">영양 균형</Heading>\n                    </HStack>\n                    <HStack spacing={6} align=\"center\">\n                      {/* 탄수화물 */}\n                      <VStack spacing={2} flex={1}>\n                        <HStack w=\"full\" justify=\"space-between\">\n                          <Text fontSize=\"sm\" color=\"whiteAlpha.800\" fontWeight=\"medium\">탄수화물</Text>\n                          <Text fontSize=\"sm\" color=\"orange.200\" fontWeight=\"bold\">{nutritionBalance.carb.toFixed(0)}%</Text>\n                        </HStack>\n                        <Progress value={nutritionBalance.carb} colorScheme=\"orange\" size=\"md\" w=\"full\" borderRadius=\"full\" />\n                        <Text fontSize=\"xs\" color=\"whiteAlpha.600\">목표: 35%</Text>\n                      </VStack>\n                      \n                      {/* 단백질 */}\n                      <VStack spacing={2} flex={1}>\n                        <HStack w=\"full\" justify=\"space-between\">\n                          <Text fontSize=\"sm\" color=\"whiteAlpha.800\" fontWeight=\"medium\">단백질</Text>\n                          <Text fontSize=\"sm\" color=\"red.200\" fontWeight=\"bold\">{nutritionBalance.protein.toFixed(0)}%</Text>\n                        </HStack>\n                        <Progress value={nutritionBalance.protein} colorScheme=\"red\" size=\"md\" w=\"full\" borderRadius=\"full\" />\n                        <Text fontSize=\"xs\" color=\"whiteAlpha.600\">목표: 40%</Text>\n                      </VStack>\n                      \n                      {/* 지방 */}\n                      <VStack spacing={2} flex={1}>\n                        <HStack w=\"full\" justify=\"space-between\">\n                          <Text fontSize=\"sm\" color=\"whiteAlpha.800\" fontWeight=\"medium\">지방</Text>\n                          <Text fontSize=\"sm\" color=\"green.200\" fontWeight=\"bold\">{nutritionBalance.fat.toFixed(0)}%</Text>\n                        </HStack>\n                        <Progress value={nutritionBalance.fat} colorScheme=\"green\" size=\"md\" w=\"full\" borderRadius=\"full\" />\n                        <Text fontSize=\"xs\" color=\"whiteAlpha.600\">목표: 25%</Text>\n                      </VStack>\n                    </HStack>\n                  </Box>\n                  \n                  {/* 개인 목표 요약 */}\n                  {userInsights && (\n                    <Box>\n                      <HStack spacing={3} mb={4}>\n                        <Text fontSize=\"xl\">🎯</Text>\n                        <Heading size=\"md\" color=\"white\">개인 목표</Heading>\n                      </HStack>\n                      <VStack spacing={3}>\n                        <HStack justify=\"space-between\" w=\"full\" p={3} bg=\"whiteAlpha.200\" borderRadius=\"lg\">\n                          <Text fontSize=\"sm\" color=\"whiteAlpha.800\">일일 칼로리</Text>\n                          <Text fontSize=\"md\" fontWeight=\"bold\" color=\"white\">\n                            {userInsights.dailyCalorieGoal.toLocaleString()}kcal\n                          </Text>\n                        </HStack>\n                        <HStack justify=\"space-between\" w=\"full\" p={3} bg=\"whiteAlpha.200\" borderRadius=\"lg\">\n                          <Text fontSize=\"sm\" color=\"whiteAlpha.800\">필요 단백질</Text>\n                          <Text fontSize=\"md\" fontWeight=\"bold\" color=\"white\">\n                            {Math.round(userInsights.proteinNeeds)}g\n                          </Text>\n                        </HStack>\n                        <HStack justify=\"space-between\" w=\"full\" p={3} bg=\"whiteAlpha.200\" borderRadius=\"lg\">\n                          <Text fontSize=\"sm\" color=\"whiteAlpha.800\">끼니당 예산</Text>\n                          <Text fontSize=\"md\" fontWeight=\"bold\" color=\"white\">\n                            {userInsights.budgetPerMeal.toLocaleString()}원\n                          </Text>\n                        </HStack>\n                      </VStack>\n                    </Box>\n                  )}\n                </Grid>\n              </Box>\n              \n              {/* 개인화 메시지 */}\n              {message && (\n                <Box bg=\"whiteAlpha.200\" p={4} borderTop=\"1px\" borderColor=\"whiteAlpha.300\">\n                  <HStack spacing={3} justify=\"center\">\n                    <Text fontSize=\"lg\">💡</Text>\n                    <Text fontSize=\"sm\" color=\"white\" fontWeight=\"medium\" textAlign=\"center\">\n                      {message}\n                    </Text>\n                  </HStack>\n                </Box>\n              )}\n            </CardBody>\n          </Card>\n\n          {/* 🍳 레시피 섹션 연결 헤더 */}\n          <Box textAlign=\"center\" py={4}>\n            <VStack spacing={3}>\n              <HStack spacing={3} justify=\"center\">\n                <Box w=\"50px\" h=\"1px\" bg=\"blue.300\"></Box>\n                <Text fontSize=\"2xl\">🍽️</Text>\n                <Box w=\"50px\" h=\"1px\" bg=\"blue.300\"></Box>\n              </HStack>\n              <Heading size=\"lg\" color=\"gray.700\">\n                🎯 {userProfile.goal === 'weight_loss' ? '다이어트' : \n                    userProfile.goal === 'muscle_gain' ? '근성장' : '건강 유지'} 맞춤 레시피\n              </Heading>\n              {isLoadingRecipes && (\n                <HStack spacing={2}>\n                  <Progress size=\"xs\" isIndeterminate colorScheme=\"blue\" w=\"200px\" />\n                  <Text fontSize=\"sm\" color=\"gray.600\">만개의 레시피 로딩 중...</Text>\n                </HStack>\n              )}\n              <Text fontSize=\"sm\" color=\"gray.600\" maxW=\"500px\">\n                위 예산과 영양 목표에 맞춰 선별된 레시피들입니다. 각 레시피는 구매 가능 횟수와 1회당 비용이 계산되어 있어요!\n              </Text>\n            </VStack>\n          </Box>\n\n\n\n          {/* 🍳 컴팩트 레시피 탭 */}\n          <Card bg=\"gradient-to-r from-teal.50 to-green.50\" borderRadius=\"xl\" overflow=\"hidden\">\n            <CardBody p={6}>\n              <VStack spacing={4} textAlign=\"center\" mb={6}>\n                <Text fontSize=\"lg\" fontWeight=\"bold\" color=\"teal.700\">\n                  🎯 {userProfile.goal === 'weight_loss' ? '다이어트' : \n                      userProfile.goal === 'muscle_gain' ? '근성장' : '건강 유지'} 목표에 \n                  최적화된 맞춤 레시피\n                </Text>\n                <Text color=\"gray.600\" fontSize=\"sm\">\n                  각 요리를 클릭하면 상세 조리법과 재료 정보를 확인할 수 있어요\n                </Text>\n              </VStack>\n            </CardBody>\n          </Card>\n\n          <Tabs isFitted variant=\"soft-rounded\" colorScheme=\"teal\" bg=\"white\" p={4} borderRadius=\"xl\" shadow=\"sm\">\n            <TabList mb=\"1em\" bg=\"gray.50\" borderRadius=\"lg\" p={1}>\n              <Tab _selected={{ bg: \"white\", shadow: \"sm\" }}>🌅 아침</Tab>\n              <Tab _selected={{ bg: \"white\", shadow: \"sm\" }}>☀️ 점심</Tab>\n              <Tab _selected={{ bg: \"white\", shadow: \"sm\" }}>🌙 저녁</Tab>\n            </TabList>\n\n            <TabPanels>\n              {/* 아침 식사 */}\n              <TabPanel>\n                <VStack spacing={3} align=\"stretch\">\n                  {mealTypeRecipes.breakfast.map((recipe) => (\n                    <CompactRecipeCard key={recipe.id} recipe={recipe} />\n                  ))}\n                </VStack>\n              </TabPanel>\n\n              {/* 점심 식사 */}\n              <TabPanel>\n                <VStack spacing={3} align=\"stretch\">\n                  {mealTypeRecipes.lunch.map((recipe) => (\n                    <CompactRecipeCard key={recipe.id} recipe={recipe} />\n                  ))}\n                </VStack>\n              </TabPanel>\n\n              {/* 저녁 식사 */}\n              <TabPanel>\n                <VStack spacing={3} align=\"stretch\">\n                  {mealTypeRecipes.dinner.map((recipe) => (\n                    <CompactRecipeCard key={recipe.id} recipe={recipe} />\n                  ))}\n                </VStack>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n\n          {/* 하단 액션 버튼 */}\n          <HStack spacing={4} justify=\"center\">\n            <Button \n              colorScheme=\"gray\" \n              variant=\"outline\" \n              size=\"lg\" \n              onClick={handleBackToInput} \n              leftIcon={<ArrowBackIcon />}\n            >\n              다시 입력하기\n            </Button>\n          </HStack>\n\n          {/* 도움말 */}\n          <Box bg=\"green.50\" p={4} borderRadius=\"md\" border=\"1px\" borderColor=\"green.200\">\n            <Text fontSize=\"sm\" color=\"green.800\" textAlign=\"center\">\n              🍳 <strong>레시피 기반 맞춤 식단!</strong> 각 요리의 재료를 클릭하면 상세 정보를 확인할 수 있어요. \n              조리법을 따라하면 {userProfile.goal === 'weight_loss' ? '다이어트' : \n                              userProfile.goal === 'muscle_gain' ? '근성장' : '건강 유지'}에 \n              최적화된 맛있는 요리가 완성됩니다! 💪\n            </Text>\n          </Box>\n        </VStack>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default RecommendationScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}