{"ast":null,"code":"import _objectSpread from\"/Users/kim_seung_bin/Desktop/ksb/public/dev/kkssbbb-github-repo/SmartMealPlanner_front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"/Users/kim_seung_bin/Desktop/ksb/public/dev/kkssbbb-github-repo/SmartMealPlanner_front/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{Container,VStack,Button,HStack,useToast,Spinner,Box,Text,Heading,SimpleGrid,Icon,keyframes,Flex,useColorModeValue}from'@chakra-ui/react';import{CheckCircleIcon,ArrowForwardIcon,StarIcon}from'@chakra-ui/icons';import{useAppContext}from'../context/AppContext';import{getRecommendationMessage}from'../data/mockProducts';import{fastRecommendationEngine}from'../utils/fastRecommendationEngine';import{recipeLoader}from'../data/recipeData';// 캐시 클리어용\nimport{optimizedCSVProcessor}from'../utils/optimizedCSVProcessor';// CSV 캐시 클리어용\nimport{calculateCompleteNutrition}from'../utils/calorieCalculator';import Layout from'./Layout/Layout';// 온보딩 컴포넌트들 (간소화)\nimport ProgressIndicator from'./Onboarding/ProgressIndicator';import GoalSelection from'./Onboarding/GoalSelection';import BudgetSelection from'./Onboarding/BudgetSelection';import BasicInfo from'./Onboarding/BasicInfo';// 🎯 목표 진행도 계산 헬퍼 함수\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const calculateGoalProgress=(userProfile,targets)=>{const{goal,weight}=userProfile;const progressMessages={weight_loss:{message:\"\".concat(targets.targetCalories,\"kcal \\uC2DD\\uB2E8\\uC73C\\uB85C \\uAC74\\uAC15\\uD55C \\uCCB4\\uC911\\uAC10\\uB7C9 \\uC9C4\\uD589\\uC911!\"),percentage:0,// 실제로는 시작 체중 대비 현재 진행률\nnextMilestone:'첫 1kg 감량까지 약 2주 예상'},muscle_gain:{message:\"\\uC77C\\uC77C \\uB2E8\\uBC31\\uC9C8 \".concat(Math.round(targets.dailyProteinNeeds),\"g\\uB85C \\uADFC\\uC131\\uC7A5 \\uCD5C\\uC801\\uD654!\"),percentage:0,nextMilestone:'첫 근력 향상까지 약 4주 예상'},maintenance:{message:\"\".concat(weight,\"kg \\uAC74\\uAC15 \\uCCB4\\uC911 \\uC720\\uC9C0\\uB97C \\uC704\\uD55C \\uADE0\\uD615 \\uC2DD\\uB2E8!\"),percentage:100,// 유지 목표는 100%\nnextMilestone:'꾸준한 건강 관리가 목표!'}};return progressMessages[goal||'maintenance'];};// 애니메이션 키프레임\nconst fadeInUp=keyframes(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  from { opacity: 0; transform: translateY(30px); }\\n  to { opacity: 1; transform: translateY(0); }\\n\"])));const float=keyframes(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  0%, 100% { transform: translateY(0px); }\\n  50% { transform: translateY(-10px); }\\n\"])));const pulse=keyframes(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  0%, 100% { transform: scale(1); }\\n  50% { transform: scale(1.05); }\\n\"])));// 타이핑 효과 훅\nconst useTypingEffect=function(text){let speed=arguments.length>1&&arguments[1]!==undefined?arguments[1]:100;const[displayText,setDisplayText]=useState('');const[isCompleted,setIsCompleted]=useState(false);useEffect(()=>{let i=0;const timer=setInterval(()=>{if(i<text.length){setDisplayText(text.slice(0,i+1));i++;}else{setIsCompleted(true);clearInterval(timer);}},speed);return()=>clearInterval(timer);},[text,speed]);return{displayText,isCompleted};};const InputScreen=()=>{const navigate=useNavigate();const toast=useToast();const{// 기존 상태\nsetUserInput,setRecommendationResult,isLoading,setIsLoading,// 새로운 온보딩 상태\nuserProfile,updateUserProfile,currentStep,setCurrentStep,completedSteps,setCompletedSteps,calorieCalculation,setCalorieCalculation,setIsOnboardingComplete}=useAppContext();// 히어로 섹션 상태\nconst[showHero,setShowHero]=useState(true);const[userProblems,setUserProblems]=useState([{problem:\"매번 뭘 먹을지 고민돼요 😰\",checked:false},{problem:\"재료 구매가 너무 번거로워요 🛒\",checked:false},{problem:\"예산 관리가 어려워요 💸\",checked:false}]);// 타이핑 효과\nconst mainMessage=useTypingEffect(\"매번 식단 할 때 뭘 먹을지 고민되고, 재료 구매가 번거로우셨나요?\",50);const subMessage=useTypingEffect(\"예산 내에서 목표에 맞는 레시피를 추천하고 재료를 쿠팡에서 바로 주문하세요.\",40);// 색상 모드\nconst bgGradient=useColorModeValue('linear(to-br, blue.50, teal.50, green.50)','linear(to-br, blue.900, teal.900, green.900)');const cardBg=useColorModeValue('white','gray.700');const textColor=useColorModeValue('gray.700','gray.200');// 인터랙티브 기능들\nconst handleProblemCheck=index=>{setUserProblems(prev=>prev.map((item,i)=>i===index?_objectSpread(_objectSpread({},item),{},{checked:!item.checked}):item));};const handleStartJourney=()=>{setShowHero(false);setCurrentStep('goal');};const allProblemsChecked=userProblems.every(p=>p.checked);// 단계별 필수 조건 체크 (간소화 + 디버깅)\nconst isStepValid=()=>{switch(currentStep){case'goal':return userProfile.goal!==undefined;case'budget':return userProfile.budget&&userProfile.budget>0;case'basic_info':// MVP 테스트용: 기본값이 있으면 통과 (더 관대한 검증)\nconst hasGender=userProfile.gender;const hasBasicInfo=userProfile.height&&userProfile.weight&&userProfile.age;const hasActivity=userProfile.activityLevel;const isValid=hasGender&&hasBasicInfo&&hasActivity;// 디버깅용 콘솔 로그\nconsole.log('BasicInfo 검증 (MVP):',{gender:userProfile.gender,height:userProfile.height,weight:userProfile.weight,age:userProfile.age,activityLevel:userProfile.activityLevel,hasGender,hasBasicInfo,hasActivity,isValid});return isValid;default:return false;}};// 다음 단계로 이동\nconst handleNext=()=>{if(!isStepValid()){toast({title:'정보를 입력해주세요',description:'다음 단계로 진행하기 위해 필요한 정보를 모두 입력해주세요.',status:'warning',duration:3000,isClosable:true});return;}// 현재 단계를 완료된 단계에 추가\nif(!completedSteps.includes(currentStep)){setCompletedSteps([...completedSteps,currentStep]);}// 다음 단계로 이동 (간소화)\nconst stepOrder=['goal','budget','basic_info'];const currentIndex=stepOrder.indexOf(currentStep);if(currentIndex<stepOrder.length-1){setCurrentStep(stepOrder[currentIndex+1]);}};// 이전 단계로 이동 (간소화)\nconst handlePrevious=()=>{const stepOrder=['goal','budget','basic_info'];const currentIndex=stepOrder.indexOf(currentStep);if(currentIndex>0){setCurrentStep(stepOrder[currentIndex-1]);}};// 칼로리 계산\nuseEffect(()=>{if(userProfile.gender&&userProfile.height&&userProfile.weight&&userProfile.age&&userProfile.goal&&userProfile.activityLevel){const calculation=calculateCompleteNutrition(userProfile);setCalorieCalculation(calculation);}},[userProfile,setCalorieCalculation]);// 온보딩 완료 및 식단 추천\nconst handleComplete=async()=>{// 칼로리 계산이 안되어 있으면 자동 계산\nlet finalCalorieCalculation=calorieCalculation;if(!finalCalorieCalculation&&userProfile.gender&&userProfile.height&&userProfile.weight&&userProfile.age&&userProfile.goal&&userProfile.activityLevel){finalCalorieCalculation=calculateCompleteNutrition(userProfile);setCalorieCalculation(finalCalorieCalculation);}if(!finalCalorieCalculation){toast({title:'정보 부족',description:'칼로리 계산을 위한 정보가 부족합니다. 모든 정보를 입력해주세요.',status:'error',duration:3000,isClosable:true});return;}setIsLoading(true);try{// 온보딩 완료 표시\nsetIsOnboardingComplete(true);// 기존 UserInput 형식으로 변환하여 저장\nconst inputData={budget:userProfile.budget,// 사용자가 설정한 예산 사용\nnutrients:finalCalorieCalculation.macros};setUserInput(inputData);// 🚀 초고속 로딩 (더미 지연 제거)\n// await new Promise(resolve => setTimeout(resolve, 500)); // 제거\n// 사용자 선호도와 히스토리 시뮬레이션 (실제로는 localStorage나 DB에서 가져옴)\nconst preferences={cookingTime:userProfile.goal==='weight_loss'?'quick':'normal',difficulty:'easy',priceRange:inputData.budget>400000?'premium':inputData.budget>250000?'standard':'budget'};const history={purchasedProducts:[],// 실제로는 구매 이력\ncookedRecipes:[],// 실제로는 조리 이력\nfavoriteIngredients:[]// 실제로는 선호 재료\n};// 🚀 초고속 개인맞춤 추천 실행!\nconsole.log('⚡ 초고속 추천 엔진 사용');// 🔥 모든 캐시 클리어 (문제 해결용)\nfastRecommendationEngine.clearCache();recipeLoader.clearCache();// 레시피 캐시도 클리어!\noptimizedCSVProcessor.clearCache();// CSV 캐시도 클리어!\nconsole.log('🧹 모든 캐시 클리어 완료');// 🔍 시스템 진단 실행\nawait recipeLoader.diagnoseCacheStatus();const fastResult=await fastRecommendationEngine.generateFastRecommendations(userProfile,finalCalorieCalculation,inputData.budget);// 💰 호환성을 위해 기존 형식으로 변환\nconst personalizedResult={recommendedRecipes:fastResult.recommendedRecipes,budgetAnalysis:fastResult.budgetAnalysis,personalizedMessage:\"\\uD83C\\uDFAF \".concat(userProfile.goal==='weight_loss'?'체중 감량':userProfile.goal==='muscle_gain'?'근육 증가':'체중 유지',\" \\uBAA9\\uD45C\\uC5D0 \\uB9DE\\uB294 \\uB9DE\\uCDA4 \\uB808\\uC2DC\\uD53C\\uB97C \\uCD94\\uCC9C\\uB4DC\\uB9BD\\uB2C8\\uB2E4!\"),nutritionTargets:{targetCalories:finalCalorieCalculation.tdee,macroGrams:finalCalorieCalculation.macros,dailyTargets:{calories:finalCalorieCalculation.tdee,protein:finalCalorieCalculation.macros.protein,carb:finalCalorieCalculation.macros.carb,fat:finalCalorieCalculation.macros.fat},dailyProteinNeeds:finalCalorieCalculation.macros.protein,macroPercentages:{protein:25,carb:50,fat:25}},recommendedProducts:[],// 빠른 로딩을 위해 일단 빈 배열\ncontext:{userProfile:userProfile,calorieCalculation,currentTime:new Date(),preferences,history}};// 🍳 레시피 기반 정확한 예산 계산!\nconst recommendedRecipeList=personalizedResult.recommendedRecipes||[];// 🚀 초고속 레시피 처리 (복잡한 계산 최소화)\nconst meals=recommendedRecipeList.slice(0,3).map((recipe,index)=>{var _personalizedResult$b;const mealTypes=['breakfast','lunch','dinner'];const mealType=mealTypes[index]||'breakfast';// 빠른 추정치 사용 (실제 재료 계산 생략)\nconst estimatedCost=((_personalizedResult$b=personalizedResult.budgetAnalysis.costBreakdown[index])===null||_personalizedResult$b===void 0?void 0:_personalizedResult$b.monthlyCost)||45000;const estimatedNutrition={calories:400+index*50,protein:25+index*5,carb:45+index*10,fat:15+index*3};return{id:mealType,recipe:recipe,products:[{// 간단한 더미 데이터\nname:recipe.name+' 재료 세트',price:estimatedCost,usedQuantity:1,costPerRecipe:estimatedCost/30,monthlyNeeded:1}],totalPrice:estimatedCost,totalNutrition:estimatedNutrition,mealType:mealType,servings:30};});// 🚀 빈 슬롯을 간단히 채우기 (복잡한 처리 생략)\nwhile(meals.length<3){const mealTypes=['breakfast','lunch','dinner'];const mealType=mealTypes[meals.length];// 기본 더미 레시피 (빠른 로딩)\nmeals.push({id:mealType,recipe:{id:\"default-\".concat(mealType),name:\"\\uCD94\\uCC9C \".concat(mealType==='breakfast'?'아침':mealType==='lunch'?'점심':'저녁',\" \\uB808\\uC2DC\\uD53C\"),description:'개인 맞춤 레시피를 준비 중입니다.',image:'https://images.unsplash.com/photo-1546833999-b9f581a1996d?q=80&w=400'},products:[],totalPrice:45000,totalNutrition:{calories:400,protein:25,carb:45,fat:15},mealType:mealType,servings:30});}// 💰 예산 분석 결과 활용 (정확한 예산 계산)\nconst totalBudgetUsed=personalizedResult.budgetAnalysis.totalEstimatedCost;const budgetRemaining=inputData.budget-totalBudgetUsed;// 🎯 개인맞춤 RecommendationResult 생성\nconst result={meals,totalBudgetUsed,budgetRemaining,nutritionBalance:finalCalorieCalculation.macros,message:personalizedResult.personalizedMessage,// 🌟 개인맞춤 메시지!\nnutritionTargets:personalizedResult.nutritionTargets,// 🎯 개인 영양 목표\nrecommendedRecipes:personalizedResult.recommendedRecipes,// 🍳 맞춤 레시피\nuserInsights:{dailyCalorieGoal:personalizedResult.nutritionTargets.targetCalories,proteinNeeds:personalizedResult.nutritionTargets.dailyProteinNeeds,budgetPerMeal:Math.round(inputData.budget/7/3),// 끼니당 예산 (일주일 기준)\ngoalProgress:calculateGoalProgress(userProfile,personalizedResult.nutritionTargets)}};setRecommendationResult(result);toast({title:'맞춤 식단 완성! 🎉',description:getRecommendationMessage(userProfile.goal),status:'success',duration:3000,isClosable:true});// 추천 결과 페이지로 이동\nnavigate('/recommendations');}catch(error){toast({title:'오류 발생',description:'식단 추천 중 문제가 발생했습니다. 다시 시도해주세요.',status:'error',duration:3000,isClosable:true});}finally{setIsLoading(false);}};// 현재 단계에 맞는 컴포넌트 렌더링 (간소화)\nconst renderCurrentStep=()=>{switch(currentStep){case'goal':return/*#__PURE__*/_jsx(GoalSelection,{selectedGoal:userProfile.goal,onGoalSelect:goal=>updateUserProfile({goal})});case'budget':return/*#__PURE__*/_jsx(BudgetSelection,{selectedBudget:userProfile.budget||170000,onBudgetSelect:budget=>updateUserProfile({budget})});case'basic_info':return/*#__PURE__*/_jsx(BasicInfo,{userProfile:userProfile,onProfileUpdate:update=>updateUserProfile(update)});default:return null;}};const stepOrder=['goal','budget','basic_info'];const currentIndex=stepOrder.indexOf(currentStep);const isFirstStep=currentIndex===0;const isLastStep=currentIndex===stepOrder.length-1;// 히어로 섹션 컴포넌트\nconst HeroSection=()=>/*#__PURE__*/_jsx(Box,{bgGradient:bgGradient,minH:\"100vh\",display:\"flex\",alignItems:\"center\",animation:\"\".concat(fadeInUp,\" 1s ease-out\"),children:/*#__PURE__*/_jsx(Container,{maxW:\"6xl\",py:{base:12,md:20},children:/*#__PURE__*/_jsxs(VStack,{spacing:{base:8,md:12},align:\"center\",textAlign:\"center\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Heading,{size:{base:\"lg\",md:\"xl\",lg:\"2xl\"},color:\"gray.800\",lineHeight:\"shorter\",mb:4,minH:{base:\"80px\",md:\"120px\"},children:[mainMessage.displayText,!mainMessage.isCompleted&&/*#__PURE__*/_jsx(Text,{as:\"span\",color:\"blue.500\",animation:\"\".concat(pulse,\" 1s infinite\"),children:\"|\"})]}),mainMessage.isCompleted&&/*#__PURE__*/_jsxs(Text,{fontSize:{base:\"md\",md:\"lg\"},color:\"gray.600\",maxW:\"2xl\",mx:\"auto\",animation:\"\".concat(fadeInUp,\" 0.8s ease-out\"),minH:{base:\"60px\",md:\"80px\"},children:[subMessage.displayText,!subMessage.isCompleted&&/*#__PURE__*/_jsx(Text,{as:\"span\",color:\"blue.500\",animation:\"\".concat(pulse,\" 1s infinite\"),children:\"|\"})]})]}),subMessage.isCompleted&&/*#__PURE__*/_jsxs(VStack,{spacing:4,w:\"full\",maxW:\"md\",animation:\"\".concat(fadeInUp,\" 0.8s ease-out 0.5s both\"),children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",fontWeight:\"semibold\",color:\"gray.700\",mb:2,children:\"\\uD639\\uC2DC \\uC774\\uB7F0 \\uACE0\\uBBFC \\uC788\\uC73C\\uC168\\uB098\\uC694? \\uD83E\\uDD14\"}),userProblems.map((item,index)=>/*#__PURE__*/_jsxs(Flex,{as:\"button\",onClick:()=>handleProblemCheck(index),bg:cardBg,p:4,borderRadius:\"lg\",border:\"2px\",borderColor:item.checked?\"green.400\":\"gray.200\",w:\"full\",align:\"center\",transition:\"all 0.3s ease\",_hover:{transform:\"translateY(-2px)\",shadow:\"lg\",borderColor:item.checked?\"green.500\":\"blue.300\"},cursor:\"pointer\",children:[/*#__PURE__*/_jsx(Icon,{as:CheckCircleIcon,color:item.checked?\"green.500\":\"gray.300\",boxSize:6,mr:3,transition:\"all 0.3s ease\"}),/*#__PURE__*/_jsx(Text,{flex:1,textAlign:\"left\",color:item.checked?\"green.700\":textColor,fontWeight:item.checked?\"semibold\":\"normal\",children:item.problem})]},index))]}),allProblemsChecked&&/*#__PURE__*/_jsxs(VStack,{spacing:4,animation:\"\".concat(fadeInUp,\" 0.8s ease-out 0.8s both\"),children:[/*#__PURE__*/_jsx(Text,{fontSize:\"xl\",fontWeight:\"bold\",color:\"blue.600\",children:\"\\uADF8\\uB807\\uB2E4\\uBA74 \\uC9C0\\uAE08 \\uBC14\\uB85C \\uD574\\uACB0\\uD574\\uBCF4\\uC138\\uC694! \\u2728\"}),/*#__PURE__*/_jsx(Button,{size:\"lg\",colorScheme:\"blue\",rightIcon:/*#__PURE__*/_jsx(ArrowForwardIcon,{}),onClick:handleStartJourney,px:8,py:6,fontSize:\"lg\",animation:\"\".concat(pulse,\" 2s infinite\"),_hover:{transform:\"scale(1.05)\",shadow:\"xl\"},transition:\"all 0.3s ease\",children:\"3\\uBD84\\uB9CC\\uC5D0 \\uB9DE\\uCDA4 \\uC2DD\\uB2E8 \\uB9CC\\uB4E4\\uAE30\"}),/*#__PURE__*/_jsxs(HStack,{spacing:2,color:\"gray.500\",children:[/*#__PURE__*/_jsx(StarIcon,{boxSize:4,color:\"yellow.400\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",children:\"\\uC774\\uBBF8 1,000\\uBA85\\uC774 \\uC2DD\\uB2E8 \\uACE0\\uBBFC\\uC744 \\uD574\\uACB0\\uD588\\uC5B4\\uC694!\"}),/*#__PURE__*/_jsx(StarIcon,{boxSize:4,color:\"yellow.400\"})]})]}),/*#__PURE__*/_jsx(SimpleGrid,{columns:{base:3,md:6},spacing:8,w:\"full\",maxW:\"2xl\",opacity:0.6,children:['🥗','🍲','🥘','🍱','🥙','🍜'].map((emoji,index)=>/*#__PURE__*/_jsx(Text,{fontSize:{base:\"2xl\",md:\"3xl\"},animation:\"\".concat(float,\" \").concat(3+index*0.5,\"s ease-in-out infinite\"),style:{animationDelay:\"\".concat(index*0.2,\"s\")},children:emoji},index))})]})})});return/*#__PURE__*/_jsx(Layout,{children:showHero?/*#__PURE__*/_jsx(HeroSection,{}):/*#__PURE__*/_jsx(Container,{maxW:{base:\"100%\",sm:\"container.sm\",md:\"4xl\"},px:{base:4,md:6},py:{base:6,md:8},children:/*#__PURE__*/_jsxs(VStack,{spacing:{base:6,md:8},align:\"stretch\",children:[/*#__PURE__*/_jsx(ProgressIndicator,{currentStep:currentStep,completedSteps:completedSteps}),renderCurrentStep(),/*#__PURE__*/_jsxs(VStack,{spacing:{base:3,md:0},w:\"full\",pt:{base:6,md:4},children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",w:\"full\",display:{base:\"none\",md:\"flex\"},children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:handlePrevious,isDisabled:isFirstStep,leftIcon:/*#__PURE__*/_jsx(\"span\",{children:\"\\u2190\"}),size:\"lg\",children:\"\\uC774\\uC804\"}),isLastStep?/*#__PURE__*/_jsx(Button,{colorScheme:\"teal\",size:\"lg\",onClick:handleComplete,isLoading:isLoading,loadingText:\"\\uC2DD\\uB2E8 \\uC0DD\\uC131 \\uC911...\",isDisabled:!isStepValid(),rightIcon:isLoading?/*#__PURE__*/_jsx(Spinner,{size:\"sm\"}):/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83C\\uDF89\"}),px:8,children:isLoading?'맞춤 식단 생성 중...':'맞춤 식단 받기'}):/*#__PURE__*/_jsx(Button,{colorScheme:\"teal\",onClick:handleNext,isDisabled:!isStepValid(),rightIcon:/*#__PURE__*/_jsx(\"span\",{children:\"\\u2192\"}),size:\"lg\",children:\"\\uB2E4\\uC74C\"})]}),/*#__PURE__*/_jsxs(VStack,{spacing:3,w:\"full\",display:{base:\"flex\",md:\"none\"},children:[isLastStep?/*#__PURE__*/_jsx(Button,{colorScheme:\"teal\",size:\"lg\",onClick:handleComplete,isLoading:isLoading,loadingText:\"\\uC2DD\\uB2E8 \\uC0DD\\uC131 \\uC911...\",isDisabled:!isStepValid(),rightIcon:isLoading?/*#__PURE__*/_jsx(Spinner,{size:\"sm\"}):/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83C\\uDF89\"}),w:\"full\",py:6,fontSize:\"lg\",borderRadius:\"xl\",children:isLoading?'맞춤 식단 생성 중...':'맞춤 식단 받기'}):/*#__PURE__*/_jsx(Button,{colorScheme:\"teal\",onClick:handleNext,isDisabled:!isStepValid(),rightIcon:/*#__PURE__*/_jsx(\"span\",{children:\"\\u2192\"}),size:\"lg\",w:\"full\",py:6,fontSize:\"lg\",borderRadius:\"xl\",children:\"\\uB2E4\\uC74C\"}),!isFirstStep&&/*#__PURE__*/_jsx(Button,{variant:\"outline\",colorScheme:\"gray\",onClick:handlePrevious,leftIcon:/*#__PURE__*/_jsx(\"span\",{children:\"\\u2190\"}),size:\"md\",w:\"full\",borderRadius:\"xl\",children:\"\\uC774\\uC804\"})]})]})]})})});};export default InputScreen;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Container","VStack","Button","HStack","useToast","Spinner","Box","Text","Heading","SimpleGrid","Icon","keyframes","Flex","useColorModeValue","CheckCircleIcon","ArrowForwardIcon","StarIcon","useAppContext","getRecommendationMessage","fastRecommendationEngine","recipeLoader","optimizedCSVProcessor","calculateCompleteNutrition","Layout","ProgressIndicator","GoalSelection","BudgetSelection","BasicInfo","jsx","_jsx","jsxs","_jsxs","calculateGoalProgress","userProfile","targets","goal","weight","progressMessages","weight_loss","message","concat","targetCalories","percentage","nextMilestone","muscle_gain","Math","round","dailyProteinNeeds","maintenance","fadeInUp","_templateObject","_taggedTemplateLiteral","float","_templateObject2","pulse","_templateObject3","useTypingEffect","text","speed","arguments","length","undefined","displayText","setDisplayText","isCompleted","setIsCompleted","i","timer","setInterval","slice","clearInterval","InputScreen","navigate","toast","setUserInput","setRecommendationResult","isLoading","setIsLoading","updateUserProfile","currentStep","setCurrentStep","completedSteps","setCompletedSteps","calorieCalculation","setCalorieCalculation","setIsOnboardingComplete","showHero","setShowHero","userProblems","setUserProblems","problem","checked","mainMessage","subMessage","bgGradient","cardBg","textColor","handleProblemCheck","index","prev","map","item","_objectSpread","handleStartJourney","allProblemsChecked","every","p","isStepValid","budget","hasGender","gender","hasBasicInfo","height","age","hasActivity","activityLevel","isValid","console","log","handleNext","title","description","status","duration","isClosable","includes","stepOrder","currentIndex","indexOf","handlePrevious","calculation","handleComplete","finalCalorieCalculation","inputData","nutrients","macros","preferences","cookingTime","difficulty","priceRange","history","purchasedProducts","cookedRecipes","favoriteIngredients","clearCache","diagnoseCacheStatus","fastResult","generateFastRecommendations","personalizedResult","recommendedRecipes","budgetAnalysis","personalizedMessage","nutritionTargets","tdee","macroGrams","dailyTargets","calories","protein","carb","fat","macroPercentages","recommendedProducts","context","currentTime","Date","recommendedRecipeList","meals","recipe","_personalizedResult$b","mealTypes","mealType","estimatedCost","costBreakdown","monthlyCost","estimatedNutrition","id","products","name","price","usedQuantity","costPerRecipe","monthlyNeeded","totalPrice","totalNutrition","servings","push","image","totalBudgetUsed","totalEstimatedCost","budgetRemaining","result","nutritionBalance","userInsights","dailyCalorieGoal","proteinNeeds","budgetPerMeal","goalProgress","error","renderCurrentStep","selectedGoal","onGoalSelect","selectedBudget","onBudgetSelect","onProfileUpdate","update","isFirstStep","isLastStep","HeroSection","minH","display","alignItems","animation","children","maxW","py","base","md","spacing","align","textAlign","size","lg","color","lineHeight","mb","as","fontSize","mx","w","fontWeight","onClick","bg","borderRadius","border","borderColor","transition","_hover","transform","shadow","cursor","boxSize","mr","flex","colorScheme","rightIcon","px","columns","opacity","emoji","style","animationDelay","sm","pt","justify","variant","isDisabled","leftIcon","loadingText"],"sources":["/Users/kim_seung_bin/Desktop/ksb/public/dev/kkssbbb-github-repo/SmartMealPlanner_front/src/components/InputScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  VStack,\n  Button,\n  HStack,\n  useToast,\n  Spinner,\n  Box,\n  Text,\n  Heading,\n  Image,\n  Badge,\n  SimpleGrid,\n  Icon,\n  keyframes,\n  Flex,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { CheckCircleIcon, ArrowForwardIcon, StarIcon } from '@chakra-ui/icons';\nimport { useAppContext } from '../context/AppContext';\nimport { getRecommendationMessage } from '../data/mockProducts';\nimport { fastRecommendationEngine } from '../utils/fastRecommendationEngine';\nimport { recipeLoader } from '../data/recipeData'; // 캐시 클리어용\nimport { optimizedCSVProcessor } from '../utils/optimizedCSVProcessor'; // CSV 캐시 클리어용\nimport { RecommendationResult, UserProfile, PersonalizedNutritionTargets } from '../types';\nimport { calculateCompleteNutrition } from '../utils/calorieCalculator';\nimport Layout from './Layout/Layout';\n\n// 온보딩 컴포넌트들 (간소화)\nimport ProgressIndicator from './Onboarding/ProgressIndicator';\nimport GoalSelection from './Onboarding/GoalSelection';\nimport BudgetSelection from './Onboarding/BudgetSelection';\nimport BasicInfo from './Onboarding/BasicInfo';\n\n\n\n// 🎯 목표 진행도 계산 헬퍼 함수\nconst calculateGoalProgress = (userProfile: Partial<UserProfile>, targets: PersonalizedNutritionTargets) => {\n  const { goal, weight } = userProfile;\n  \n  const progressMessages = {\n    weight_loss: {\n      message: `${targets.targetCalories}kcal 식단으로 건강한 체중감량 진행중!`,\n      percentage: 0, // 실제로는 시작 체중 대비 현재 진행률\n      nextMilestone: '첫 1kg 감량까지 약 2주 예상'\n    },\n    muscle_gain: {\n      message: `일일 단백질 ${Math.round(targets.dailyProteinNeeds)}g로 근성장 최적화!`,\n      percentage: 0,\n      nextMilestone: '첫 근력 향상까지 약 4주 예상'\n    },\n    maintenance: {\n      message: `${weight}kg 건강 체중 유지를 위한 균형 식단!`,\n      percentage: 100, // 유지 목표는 100%\n      nextMilestone: '꾸준한 건강 관리가 목표!'\n    }\n  };\n\n  return progressMessages[goal || 'maintenance'];\n};\n\n// 애니메이션 키프레임\nconst fadeInUp = keyframes`\n  from { opacity: 0; transform: translateY(30px); }\n  to { opacity: 1; transform: translateY(0); }\n`;\n\nconst float = keyframes`\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-10px); }\n`;\n\nconst pulse = keyframes`\n  0%, 100% { transform: scale(1); }\n  50% { transform: scale(1.05); }\n`;\n\n// 타이핑 효과 훅\nconst useTypingEffect = (text: string, speed: number = 100) => {\n  const [displayText, setDisplayText] = useState('');\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  useEffect(() => {\n    let i = 0;\n    const timer = setInterval(() => {\n      if (i < text.length) {\n        setDisplayText(text.slice(0, i + 1));\n        i++;\n      } else {\n        setIsCompleted(true);\n        clearInterval(timer);\n      }\n    }, speed);\n\n    return () => clearInterval(timer);\n  }, [text, speed]);\n\n  return { displayText, isCompleted };\n};\n\nconst InputScreen: React.FC = () => {\n  const navigate = useNavigate();\n  const toast = useToast();\n  \n  const {\n    // 기존 상태\n    setUserInput,\n    setRecommendationResult,\n    isLoading,\n    setIsLoading,\n    // 새로운 온보딩 상태\n    userProfile,\n    updateUserProfile,\n    currentStep,\n    setCurrentStep,\n    completedSteps,\n    setCompletedSteps,\n    calorieCalculation,\n    setCalorieCalculation,\n\n    setIsOnboardingComplete,\n  } = useAppContext();\n\n  // 히어로 섹션 상태\n  const [showHero, setShowHero] = useState(true);\n  const [userProblems, setUserProblems] = useState([\n    { problem: \"매번 뭘 먹을지 고민돼요 😰\", checked: false },\n    { problem: \"재료 구매가 너무 번거로워요 🛒\", checked: false },\n    { problem: \"예산 관리가 어려워요 💸\", checked: false }\n  ]);\n\n  // 타이핑 효과\n  const mainMessage = useTypingEffect(\"매번 식단 할 때 뭘 먹을지 고민되고, 재료 구매가 번거로우셨나요?\", 50);\n  const subMessage = useTypingEffect(\"예산 내에서 목표에 맞는 레시피를 추천하고 재료를 쿠팡에서 바로 주문하세요.\", 40);\n\n  // 색상 모드\n  const bgGradient = useColorModeValue(\n    'linear(to-br, blue.50, teal.50, green.50)',\n    'linear(to-br, blue.900, teal.900, green.900)'\n  );\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const textColor = useColorModeValue('gray.700', 'gray.200');\n\n  // 인터랙티브 기능들\n  const handleProblemCheck = (index: number) => {\n    setUserProblems(prev => \n      prev.map((item, i) => \n        i === index ? { ...item, checked: !item.checked } : item\n      )\n    );\n  };\n\n  const handleStartJourney = () => {\n    setShowHero(false);\n    setCurrentStep('goal');\n  };\n\n  const allProblemsChecked = userProblems.every(p => p.checked);\n\n  // 단계별 필수 조건 체크 (간소화 + 디버깅)\n  const isStepValid = () => {\n    switch (currentStep) {\n      case 'goal':\n        return userProfile.goal !== undefined;\n      case 'budget':\n        return userProfile.budget && userProfile.budget > 0;\n      case 'basic_info':\n        // MVP 테스트용: 기본값이 있으면 통과 (더 관대한 검증)\n        const hasGender = userProfile.gender;\n        const hasBasicInfo = userProfile.height && userProfile.weight && userProfile.age;\n        const hasActivity = userProfile.activityLevel;\n        \n        const isValid = hasGender && hasBasicInfo && hasActivity;\n        \n        // 디버깅용 콘솔 로그\n        console.log('BasicInfo 검증 (MVP):', {\n          gender: userProfile.gender,\n          height: userProfile.height,\n          weight: userProfile.weight,\n          age: userProfile.age,\n          activityLevel: userProfile.activityLevel,\n          hasGender,\n          hasBasicInfo,\n          hasActivity,\n          isValid\n        });\n        \n        return isValid;\n      default:\n        return false;\n    }\n  };\n\n  // 다음 단계로 이동\n  const handleNext = () => {\n    if (!isStepValid()) {\n      toast({\n        title: '정보를 입력해주세요',\n        description: '다음 단계로 진행하기 위해 필요한 정보를 모두 입력해주세요.',\n        status: 'warning',\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    // 현재 단계를 완료된 단계에 추가\n    if (!completedSteps.includes(currentStep)) {\n      setCompletedSteps([...completedSteps, currentStep]);\n    }\n\n    // 다음 단계로 이동 (간소화)\n    const stepOrder: (typeof currentStep)[] = ['goal', 'budget', 'basic_info'];\n    const currentIndex = stepOrder.indexOf(currentStep);\n    \n    if (currentIndex < stepOrder.length - 1) {\n      setCurrentStep(stepOrder[currentIndex + 1]);\n    }\n  };\n\n  // 이전 단계로 이동 (간소화)\n  const handlePrevious = () => {\n    const stepOrder: (typeof currentStep)[] = ['goal', 'budget', 'basic_info'];\n    const currentIndex = stepOrder.indexOf(currentStep);\n    \n    if (currentIndex > 0) {\n      setCurrentStep(stepOrder[currentIndex - 1]);\n    }\n  };\n\n  // 칼로리 계산\n  useEffect(() => {\n    if (userProfile.gender && userProfile.height && userProfile.weight && \n        userProfile.age && userProfile.goal && userProfile.activityLevel) {\n      const calculation = calculateCompleteNutrition(userProfile as UserProfile);\n      setCalorieCalculation(calculation);\n    }\n  }, [userProfile, setCalorieCalculation]);\n\n  // 온보딩 완료 및 식단 추천\n  const handleComplete = async () => {\n    // 칼로리 계산이 안되어 있으면 자동 계산\n    let finalCalorieCalculation = calorieCalculation;\n    if (!finalCalorieCalculation && userProfile.gender && userProfile.height && \n        userProfile.weight && userProfile.age && userProfile.goal && userProfile.activityLevel) {\n      finalCalorieCalculation = calculateCompleteNutrition(userProfile as UserProfile);\n      setCalorieCalculation(finalCalorieCalculation);\n    }\n\n    if (!finalCalorieCalculation) {\n      toast({\n        title: '정보 부족',\n        description: '칼로리 계산을 위한 정보가 부족합니다. 모든 정보를 입력해주세요.',\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // 온보딩 완료 표시\n      setIsOnboardingComplete(true);\n      \n      // 기존 UserInput 형식으로 변환하여 저장\n      const inputData = {\n        budget: userProfile.budget!, // 사용자가 설정한 예산 사용\n        nutrients: finalCalorieCalculation.macros,\n      };\n      setUserInput(inputData);\n\n      // 🚀 초고속 로딩 (더미 지연 제거)\n      // await new Promise(resolve => setTimeout(resolve, 500)); // 제거\n\n      // 사용자 선호도와 히스토리 시뮬레이션 (실제로는 localStorage나 DB에서 가져옴)\n      const preferences = {\n        cookingTime: userProfile.goal === 'weight_loss' ? 'quick' as const : 'normal' as const,\n        difficulty: 'easy' as const,\n        priceRange: inputData.budget > 400000 ? 'premium' as const : \n                   inputData.budget > 250000 ? 'standard' as const : 'budget' as const\n      };\n\n      const history = {\n        purchasedProducts: [], // 실제로는 구매 이력\n        cookedRecipes: [],     // 실제로는 조리 이력\n        favoriteIngredients: [] // 실제로는 선호 재료\n      };\n\n      // 🚀 초고속 개인맞춤 추천 실행!\n      console.log('⚡ 초고속 추천 엔진 사용');\n      \n      // 🔥 모든 캐시 클리어 (문제 해결용)\n      fastRecommendationEngine.clearCache();\n      recipeLoader.clearCache(); // 레시피 캐시도 클리어!\n      optimizedCSVProcessor.clearCache(); // CSV 캐시도 클리어!\n      console.log('🧹 모든 캐시 클리어 완료');\n\n      // 🔍 시스템 진단 실행\n      await recipeLoader.diagnoseCacheStatus();\n      \n      const fastResult = await fastRecommendationEngine.generateFastRecommendations(\n        userProfile as UserProfile,\n        finalCalorieCalculation,\n        inputData.budget\n      );\n      \n      // 💰 호환성을 위해 기존 형식으로 변환\n      const personalizedResult = {\n        recommendedRecipes: fastResult.recommendedRecipes,\n        budgetAnalysis: fastResult.budgetAnalysis,\n        personalizedMessage: `🎯 ${userProfile.goal === 'weight_loss' ? '체중 감량' : \n                                 userProfile.goal === 'muscle_gain' ? '근육 증가' : '체중 유지'} 목표에 맞는 맞춤 레시피를 추천드립니다!`,\n        nutritionTargets: {\n          targetCalories: finalCalorieCalculation.tdee,\n          macroGrams: finalCalorieCalculation.macros,\n          dailyTargets: {\n            calories: finalCalorieCalculation.tdee,\n            protein: finalCalorieCalculation.macros.protein,\n            carb: finalCalorieCalculation.macros.carb,\n            fat: finalCalorieCalculation.macros.fat\n          },\n          dailyProteinNeeds: finalCalorieCalculation.macros.protein,\n          macroPercentages: {\n            protein: 25,\n            carb: 50,\n            fat: 25\n          }\n        },\n        recommendedProducts: [], // 빠른 로딩을 위해 일단 빈 배열\n        context: {\n          userProfile: userProfile as UserProfile,\n          calorieCalculation,\n          currentTime: new Date(),\n          preferences,\n          history\n        }\n      };\n\n\n\n      // 🍳 레시피 기반 정확한 예산 계산!\n      const recommendedRecipeList = personalizedResult.recommendedRecipes || [];\n      \n      // 🚀 초고속 레시피 처리 (복잡한 계산 최소화)\n      const meals: any[] = recommendedRecipeList.slice(0, 3).map((recipe, index) => {\n        const mealTypes = ['breakfast', 'lunch', 'dinner'];\n        const mealType = mealTypes[index] || 'breakfast';\n        \n        // 빠른 추정치 사용 (실제 재료 계산 생략)\n        const estimatedCost = personalizedResult.budgetAnalysis.costBreakdown[index]?.monthlyCost || 45000;\n        const estimatedNutrition = {\n          calories: 400 + index * 50,\n          protein: 25 + index * 5,\n          carb: 45 + index * 10,\n          fat: 15 + index * 3\n        };\n\n        return {\n          id: mealType,\n          recipe: recipe,\n          products: [{ // 간단한 더미 데이터\n            name: recipe.name + ' 재료 세트',\n            price: estimatedCost,\n            usedQuantity: 1,\n            costPerRecipe: estimatedCost / 30,\n            monthlyNeeded: 1\n          }],\n          totalPrice: estimatedCost,\n          totalNutrition: estimatedNutrition,\n          mealType: mealType,\n          servings: 30,\n        };\n      });\n\n      // 🚀 빈 슬롯을 간단히 채우기 (복잡한 처리 생략)\n      while (meals.length < 3) {\n        const mealTypes = ['breakfast', 'lunch', 'dinner'];\n        const mealType = mealTypes[meals.length];\n        \n        // 기본 더미 레시피 (빠른 로딩)\n        meals.push({\n          id: mealType,\n          recipe: {\n            id: `default-${mealType}`,\n            name: `추천 ${mealType === 'breakfast' ? '아침' : mealType === 'lunch' ? '점심' : '저녁'} 레시피`,\n            description: '개인 맞춤 레시피를 준비 중입니다.',\n            image: 'https://images.unsplash.com/photo-1546833999-b9f581a1996d?q=80&w=400'\n          },\n          products: [],\n          totalPrice: 45000,\n          totalNutrition: { calories: 400, protein: 25, carb: 45, fat: 15 },\n          mealType: mealType,\n          servings: 30,\n        });\n      }\n\n      // 💰 예산 분석 결과 활용 (정확한 예산 계산)\n      const totalBudgetUsed = personalizedResult.budgetAnalysis.totalEstimatedCost;\n      const budgetRemaining = inputData.budget - totalBudgetUsed;\n\n      // 🎯 개인맞춤 RecommendationResult 생성\n      const result: RecommendationResult = {\n        meals,\n        totalBudgetUsed,\n        budgetRemaining,\n        nutritionBalance: finalCalorieCalculation.macros,\n        message: personalizedResult.personalizedMessage, // 🌟 개인맞춤 메시지!\n        nutritionTargets: personalizedResult.nutritionTargets, // 🎯 개인 영양 목표\n        recommendedRecipes: personalizedResult.recommendedRecipes, // 🍳 맞춤 레시피\n        userInsights: {\n          dailyCalorieGoal: personalizedResult.nutritionTargets.targetCalories,\n          proteinNeeds: personalizedResult.nutritionTargets.dailyProteinNeeds,\n          budgetPerMeal: Math.round(inputData.budget / 7 / 3), // 끼니당 예산 (일주일 기준)\n          goalProgress: calculateGoalProgress(userProfile, personalizedResult.nutritionTargets as any)\n        }\n      };\n\n      setRecommendationResult(result);\n\n      toast({\n        title: '맞춤 식단 완성! 🎉',\n        description: getRecommendationMessage(userProfile.goal!),\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n\n      // 추천 결과 페이지로 이동\n      navigate('/recommendations');\n\n    } catch (error) {\n      toast({\n        title: '오류 발생',\n        description: '식단 추천 중 문제가 발생했습니다. 다시 시도해주세요.',\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 현재 단계에 맞는 컴포넌트 렌더링 (간소화)\n  const renderCurrentStep = () => {\n    switch (currentStep) {\n      case 'goal':\n        return (\n          <GoalSelection\n            selectedGoal={userProfile.goal}\n            onGoalSelect={(goal) => updateUserProfile({ goal })}\n          />\n        );\n      case 'budget':\n        return (\n          <BudgetSelection\n            selectedBudget={userProfile.budget || 170000}\n            onBudgetSelect={(budget) => updateUserProfile({ budget })}\n          />\n        );\n      case 'basic_info':\n        return (\n          <BasicInfo\n            userProfile={userProfile}\n            onProfileUpdate={(update) => updateUserProfile(update)}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  const stepOrder: (typeof currentStep)[] = ['goal', 'budget', 'basic_info'];\n  const currentIndex = stepOrder.indexOf(currentStep);\n  const isFirstStep = currentIndex === 0;\n  const isLastStep = currentIndex === stepOrder.length - 1;\n\n  // 히어로 섹션 컴포넌트\n  const HeroSection = () => (\n    <Box \n      bgGradient={bgGradient}\n      minH=\"100vh\"\n      display=\"flex\"\n      alignItems=\"center\"\n      animation={`${fadeInUp} 1s ease-out`}\n    >\n      <Container maxW=\"6xl\" py={{ base: 12, md: 20 }}>\n        <VStack spacing={{ base: 8, md: 12 }} align=\"center\" textAlign=\"center\">\n          {/* 메인 헤딩 - 타이핑 효과 */}\n          <Box>\n            <Heading \n              size={{ base: \"lg\", md: \"xl\", lg: \"2xl\" }}\n              color=\"gray.800\"\n              lineHeight=\"shorter\"\n              mb={4}\n              minH={{ base: \"80px\", md: \"120px\" }}\n            >\n              {mainMessage.displayText}\n              {!mainMessage.isCompleted && (\n                <Text as=\"span\" color=\"blue.500\" animation={`${pulse} 1s infinite`}>|</Text>\n              )}\n            </Heading>\n            \n            {/* 서브 메시지 - 메인 메시지 완료 후 표시 */}\n            {mainMessage.isCompleted && (\n              <Text \n                fontSize={{ base: \"md\", md: \"lg\" }}\n                color=\"gray.600\"\n                maxW=\"2xl\"\n                mx=\"auto\"\n                animation={`${fadeInUp} 0.8s ease-out`}\n                minH={{ base: \"60px\", md: \"80px\" }}\n              >\n                {subMessage.displayText}\n                {!subMessage.isCompleted && (\n                  <Text as=\"span\" color=\"blue.500\" animation={`${pulse} 1s infinite`}>|</Text>\n                )}\n              </Text>\n            )}\n          </Box>\n\n          {/* 문제 체크리스트 - 서브 메시지 완료 후 표시 */}\n          {subMessage.isCompleted && (\n            <VStack spacing={4} w=\"full\" maxW=\"md\" animation={`${fadeInUp} 0.8s ease-out 0.5s both`}>\n              <Text fontSize=\"lg\" fontWeight=\"semibold\" color=\"gray.700\" mb={2}>\n                혹시 이런 고민 있으셨나요? 🤔\n              </Text>\n              \n              {userProblems.map((item, index) => (\n                <Flex\n                  key={index}\n                  as=\"button\"\n                  onClick={() => handleProblemCheck(index)}\n                  bg={cardBg}\n                  p={4}\n                  borderRadius=\"lg\"\n                  border=\"2px\"\n                  borderColor={item.checked ? \"green.400\" : \"gray.200\"}\n                  w=\"full\"\n                  align=\"center\"\n                  transition=\"all 0.3s ease\"\n                  _hover={{ \n                    transform: \"translateY(-2px)\", \n                    shadow: \"lg\",\n                    borderColor: item.checked ? \"green.500\" : \"blue.300\"\n                  }}\n                  cursor=\"pointer\"\n                >\n                  <Icon\n                    as={CheckCircleIcon}\n                    color={item.checked ? \"green.500\" : \"gray.300\"}\n                    boxSize={6}\n                    mr={3}\n                    transition=\"all 0.3s ease\"\n                  />\n                  <Text \n                    flex={1} \n                    textAlign=\"left\"\n                    color={item.checked ? \"green.700\" : textColor}\n                    fontWeight={item.checked ? \"semibold\" : \"normal\"}\n                  >\n                    {item.problem}\n                  </Text>\n                </Flex>\n              ))}\n            </VStack>\n          )}\n\n          {/* CTA 버튼 - 모든 문제가 체크되면 표시 */}\n          {allProblemsChecked && (\n            <VStack spacing={4} animation={`${fadeInUp} 0.8s ease-out 0.8s both`}>\n              <Text fontSize=\"xl\" fontWeight=\"bold\" color=\"blue.600\">\n                그렇다면 지금 바로 해결해보세요! ✨\n              </Text>\n              \n              <Button\n                size=\"lg\"\n                colorScheme=\"blue\"\n                rightIcon={<ArrowForwardIcon />}\n                onClick={handleStartJourney}\n                px={8}\n                py={6}\n                fontSize=\"lg\"\n                animation={`${pulse} 2s infinite`}\n                _hover={{\n                  transform: \"scale(1.05)\",\n                  shadow: \"xl\"\n                }}\n                transition=\"all 0.3s ease\"\n              >\n                3분만에 맞춤 식단 만들기\n              </Button>\n              \n              <HStack spacing={2} color=\"gray.500\">\n                <StarIcon boxSize={4} color=\"yellow.400\" />\n                <Text fontSize=\"sm\">이미 1,000명이 식단 고민을 해결했어요!</Text>\n                <StarIcon boxSize={4} color=\"yellow.400\" />\n              </HStack>\n            </VStack>\n          )}\n\n          {/* 떠다니는 이모지들 */}\n          <SimpleGrid columns={{ base: 3, md: 6 }} spacing={8} w=\"full\" maxW=\"2xl\" opacity={0.6}>\n            {['🥗', '🍲', '🥘', '🍱', '🥙', '🍜'].map((emoji, index) => (\n              <Text\n                key={index}\n                fontSize={{ base: \"2xl\", md: \"3xl\" }}\n                animation={`${float} ${3 + index * 0.5}s ease-in-out infinite`}\n                style={{ animationDelay: `${index * 0.2}s` }}\n              >\n                {emoji}\n              </Text>\n            ))}\n          </SimpleGrid>\n        </VStack>\n      </Container>\n    </Box>\n  );\n\n  return (\n    <Layout>\n      {showHero ? (\n        <HeroSection />\n      ) : (\n        <Container maxW={{ base: \"100%\", sm: \"container.sm\", md: \"4xl\" }} px={{ base: 4, md: 6 }} py={{ base: 6, md: 8 }}>\n          <VStack spacing={{ base: 6, md: 8 }} align=\"stretch\">\n            {/* 진행 상황 표시 */}\n            <ProgressIndicator\n              currentStep={currentStep}\n              completedSteps={completedSteps}\n            />\n\n            {/* 현재 단계 컴포넌트 */}\n            {renderCurrentStep()}\n\n          {/* 네비게이션 버튼 - 모바일 최적화 */}\n          <VStack spacing={{ base: 3, md: 0 }} w=\"full\" pt={{ base: 6, md: 4 }}>\n            {/* 데스크톱 레이아웃 */}\n            <HStack justify=\"space-between\" w=\"full\" display={{ base: \"none\", md: \"flex\" }}>\n              <Button\n                variant=\"outline\"\n                onClick={handlePrevious}\n                isDisabled={isFirstStep}\n                leftIcon={<span>←</span>}\n                size=\"lg\"\n              >\n                이전\n              </Button>\n\n              {isLastStep ? (\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={handleComplete}\n                  isLoading={isLoading}\n                  loadingText=\"식단 생성 중...\"\n                  isDisabled={!isStepValid()}\n                  rightIcon={isLoading ? <Spinner size=\"sm\" /> : <span>🎉</span>}\n                  px={8}\n                >\n                  {isLoading ? '맞춤 식단 생성 중...' : '맞춤 식단 받기'}\n                </Button>\n              ) : (\n                <Button\n                  colorScheme=\"teal\"\n                  onClick={handleNext}\n                  isDisabled={!isStepValid()}\n                  rightIcon={<span>→</span>}\n                  size=\"lg\"\n                >\n                  다음\n                </Button>\n              )}\n            </HStack>\n\n            {/* 모바일 전용 버튼 레이아웃 */}\n            <VStack spacing={3} w=\"full\" display={{ base: \"flex\", md: \"none\" }}>\n              {isLastStep ? (\n                <Button\n                  colorScheme=\"teal\"\n                  size=\"lg\"\n                  onClick={handleComplete}\n                  isLoading={isLoading}\n                  loadingText=\"식단 생성 중...\"\n                  isDisabled={!isStepValid()}\n                  rightIcon={isLoading ? <Spinner size=\"sm\" /> : <span>🎉</span>}\n                  w=\"full\"\n                  py={6}\n                  fontSize=\"lg\"\n                  borderRadius=\"xl\"\n                >\n                  {isLoading ? '맞춤 식단 생성 중...' : '맞춤 식단 받기'}\n                </Button>\n              ) : (\n                <Button\n                  colorScheme=\"teal\"\n                  onClick={handleNext}\n                  isDisabled={!isStepValid()}\n                  rightIcon={<span>→</span>}\n                  size=\"lg\"\n                  w=\"full\"\n                  py={6}\n                  fontSize=\"lg\"\n                  borderRadius=\"xl\"\n                >\n                  다음\n                </Button>\n              )}\n              \n              {!isFirstStep && (\n                <Button\n                  variant=\"outline\"\n                  colorScheme=\"gray\"\n                  onClick={handlePrevious}\n                  leftIcon={<span>←</span>}\n                  size=\"md\"\n                  w=\"full\"\n                  borderRadius=\"xl\"\n                >\n                  이전\n                </Button>\n              )}\n            </VStack>\n          </VStack>\n        </VStack>\n      </Container>\n      )}\n    </Layout>\n  );\n};\n\nexport default InputScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}