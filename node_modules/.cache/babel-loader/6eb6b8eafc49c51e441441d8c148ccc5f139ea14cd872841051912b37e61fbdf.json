{"ast":null,"code":"/**\n * BMR (기초대사율) 계산 - Mifflin-St Jeor 공식 사용\n * 가장 정확한 것으로 알려진 공식\n */export const calculateBMR=profile=>{const{gender,weight,height,age}=profile;if(gender==='male'){return 10*weight+6.25*height-5*age+5;}else{return 10*weight+6.25*height-5*age-161;}};/**\n * TDEE (총 일일 에너지 소모량) 계산\n * BMR에 활동 수준을 곱해서 계산\n */export const calculateTDEE=(bmr,activityLevel)=>{const activityMultipliers={sedentary:1.2,// 운동하지 않음, 사무직\nlightly_active:1.375,// 가벼운 운동 (주 1-3회)\nmoderately_active:1.55,// 중간 강도 운동 (주 3-5회)\nvery_active:1.725,// 고강도 운동 (주 6-7회)\nextremely_active:1.9// 매우 고강도 운동, 육체 노동\n};return Math.round(bmr*activityMultipliers[activityLevel]);};/**\n * 목적에 따른 목표 칼로리 계산\n */export const calculateTargetCalories=(tdee,goal)=>{switch(goal){case'weight_loss':return Math.round(tdee*0.8);// 20% 감소 (주당 0.5kg 감량)\ncase'maintenance':return tdee;// 현재 체중 유지\ncase'muscle_gain':return Math.round(tdee*1.15);// 15% 증가 (근육 성장)\ndefault:return tdee;}};/**\n * 목적별 최적 영양소 비율 계산\n * 과학적 근거 기반\n */export const calculateOptimalMacros=goal=>{const macroPresets={weight_loss:{carb:35,// 탄수화물 낮춤, 포만감 유지\nprotein:40,// 단백질 높임, 근손실 방지\nfat:25// 적정 지방\n},maintenance:{carb:45,// 균형잡힌 비율\nprotein:25,// 표준 단백질\nfat:30// 표준 지방\n},muscle_gain:{carb:50,// 탄수화물 높임, 에너지 공급\nprotein:30,// 단백질 높임, 근육 합성\nfat:20// 지방 낮춤\n}};return macroPresets[goal];};/**\n * 전체 칼로리 계산 및 영양소 비율 도출\n */export const calculateCompleteNutrition=profile=>{const bmr=calculateBMR(profile);const tdee=calculateTDEE(bmr,profile.activityLevel);const targetCalories=calculateTargetCalories(tdee,profile.goal);const macros=calculateOptimalMacros(profile.goal);return{bmr,tdee,targetCalories,macros};};/**\n * 사용자 친화적인 목표 설명\n */export const getGoalDescription=goal=>{const descriptions={weight_loss:'건강한 체중 감량을 위해 칼로리를 줄이고 단백질을 늘렸어요.',maintenance:'현재 체중을 유지하면서 균형잡힌 영양을 제공해요.',muscle_gain:'근육 성장을 위해 충분한 칼로리와 단백질을 확보했어요.'};return descriptions[goal];};/**\n * 활동 수준별 설명\n */export const getActivityDescription=activityLevel=>{const descriptions={sedentary:'주로 앉아서 일하고 운동을 거의 하지 않음',lightly_active:'가벼운 운동이나 스포츠 (주 1-3회)',moderately_active:'중간 강도 운동이나 스포츠 (주 3-5회)',very_active:'고강도 운동이나 스포츠 (주 6-7회)',extremely_active:'매우 고강도 운동, 육체적 직업 또는 하루 2회 운동'};return descriptions[activityLevel];};/**\n * BMI 계산 및 분류\n */export const calculateBMI=(weight,height)=>{const bmi=Number((weight/Math.pow(height/100,2)).toFixed(1));let category;let description;if(bmi<18.5){category='underweight';description='저체중';}else if(bmi<23){category='normal';description='정상체중';}else if(bmi<25){category='overweight';description='과체중';}else{category='obese';description='비만';}return{bmi,category,description};};/**\n * 목표 체중 제안\n */export const suggestTargetWeight=(height,goal)=>{const idealBMI=22;// 이상적인 BMI\nconst idealWeight=idealBMI*Math.pow(height/100,2);switch(goal){case'weight_loss':return Math.round(idealWeight);case'maintenance':return 0;// 현재 체중 유지\ncase'muscle_gain':return Math.round(idealWeight+3);// 근육량 고려 3kg 추가\ndefault:return Math.round(idealWeight);}};","map":{"version":3,"names":["calculateBMR","profile","gender","weight","height","age","calculateTDEE","bmr","activityLevel","activityMultipliers","sedentary","lightly_active","moderately_active","very_active","extremely_active","Math","round","calculateTargetCalories","tdee","goal","calculateOptimalMacros","macroPresets","weight_loss","carb","protein","fat","maintenance","muscle_gain","calculateCompleteNutrition","targetCalories","macros","getGoalDescription","descriptions","getActivityDescription","calculateBMI","bmi","Number","pow","toFixed","category","description","suggestTargetWeight","idealBMI","idealWeight"],"sources":["/Users/kim_seung_bin/Desktop/ksb/public/dev/kkssbbb-github-repo/SmartMealPlanner_front/src/utils/calorieCalculator.ts"],"sourcesContent":["import { UserProfile, CalorieCalculation, NutrientRatios } from '../types';\n\n/**\n * BMR (기초대사율) 계산 - Mifflin-St Jeor 공식 사용\n * 가장 정확한 것으로 알려진 공식\n */\nexport const calculateBMR = (profile: UserProfile): number => {\n  const { gender, weight, height, age } = profile;\n  \n  if (gender === 'male') {\n    return 10 * weight + 6.25 * height - 5 * age + 5;\n  } else {\n    return 10 * weight + 6.25 * height - 5 * age - 161;\n  }\n};\n\n/**\n * TDEE (총 일일 에너지 소모량) 계산\n * BMR에 활동 수준을 곱해서 계산\n */\nexport const calculateTDEE = (bmr: number, activityLevel: UserProfile['activityLevel']): number => {\n  const activityMultipliers = {\n    sedentary: 1.2,           // 운동하지 않음, 사무직\n    lightly_active: 1.375,    // 가벼운 운동 (주 1-3회)\n    moderately_active: 1.55,  // 중간 강도 운동 (주 3-5회)\n    very_active: 1.725,       // 고강도 운동 (주 6-7회)\n    extremely_active: 1.9     // 매우 고강도 운동, 육체 노동\n  };\n  \n  return Math.round(bmr * activityMultipliers[activityLevel]);\n};\n\n/**\n * 목적에 따른 목표 칼로리 계산\n */\nexport const calculateTargetCalories = (tdee: number, goal: UserProfile['goal']): number => {\n  switch (goal) {\n    case 'weight_loss':\n      return Math.round(tdee * 0.8); // 20% 감소 (주당 0.5kg 감량)\n    case 'maintenance':\n      return tdee; // 현재 체중 유지\n    case 'muscle_gain':\n      return Math.round(tdee * 1.15); // 15% 증가 (근육 성장)\n    default:\n      return tdee;\n  }\n};\n\n/**\n * 목적별 최적 영양소 비율 계산\n * 과학적 근거 기반\n */\nexport const calculateOptimalMacros = (goal: UserProfile['goal']): NutrientRatios => {\n  const macroPresets = {\n    weight_loss: {\n      carb: 35,    // 탄수화물 낮춤, 포만감 유지\n      protein: 40, // 단백질 높임, 근손실 방지\n      fat: 25      // 적정 지방\n    },\n    maintenance: {\n      carb: 45,    // 균형잡힌 비율\n      protein: 25, // 표준 단백질\n      fat: 30      // 표준 지방\n    },\n    muscle_gain: {\n      carb: 50,    // 탄수화물 높임, 에너지 공급\n      protein: 30, // 단백질 높임, 근육 합성\n      fat: 20      // 지방 낮춤\n    }\n  };\n  \n  return macroPresets[goal];\n};\n\n/**\n * 전체 칼로리 계산 및 영양소 비율 도출\n */\nexport const calculateCompleteNutrition = (profile: UserProfile): CalorieCalculation => {\n  const bmr = calculateBMR(profile);\n  const tdee = calculateTDEE(bmr, profile.activityLevel);\n  const targetCalories = calculateTargetCalories(tdee, profile.goal);\n  const macros = calculateOptimalMacros(profile.goal);\n  \n  return {\n    bmr,\n    tdee,\n    targetCalories,\n    macros\n  };\n};\n\n/**\n * 사용자 친화적인 목표 설명\n */\nexport const getGoalDescription = (goal: UserProfile['goal']): string => {\n  const descriptions = {\n    weight_loss: '건강한 체중 감량을 위해 칼로리를 줄이고 단백질을 늘렸어요.',\n    maintenance: '현재 체중을 유지하면서 균형잡힌 영양을 제공해요.',\n    muscle_gain: '근육 성장을 위해 충분한 칼로리와 단백질을 확보했어요.'\n  };\n  \n  return descriptions[goal];\n};\n\n/**\n * 활동 수준별 설명\n */\nexport const getActivityDescription = (activityLevel: UserProfile['activityLevel']): string => {\n  const descriptions = {\n    sedentary: '주로 앉아서 일하고 운동을 거의 하지 않음',\n    lightly_active: '가벼운 운동이나 스포츠 (주 1-3회)',\n    moderately_active: '중간 강도 운동이나 스포츠 (주 3-5회)',\n    very_active: '고강도 운동이나 스포츠 (주 6-7회)',\n    extremely_active: '매우 고강도 운동, 육체적 직업 또는 하루 2회 운동'\n  };\n  \n  return descriptions[activityLevel];\n};\n\n/**\n * BMI 계산 및 분류\n */\nexport const calculateBMI = (weight: number, height: number): { bmi: number; category: string; description: string } => {\n  const bmi = Number((weight / Math.pow(height / 100, 2)).toFixed(1));\n  \n  let category: string;\n  let description: string;\n  \n  if (bmi < 18.5) {\n    category = 'underweight';\n    description = '저체중';\n  } else if (bmi < 23) {\n    category = 'normal';\n    description = '정상체중';\n  } else if (bmi < 25) {\n    category = 'overweight';\n    description = '과체중';\n  } else {\n    category = 'obese';\n    description = '비만';\n  }\n  \n  return { bmi, category, description };\n};\n\n/**\n * 목표 체중 제안\n */\nexport const suggestTargetWeight = (height: number, goal: UserProfile['goal']): number => {\n  const idealBMI = 22; // 이상적인 BMI\n  const idealWeight = (idealBMI * Math.pow(height / 100, 2));\n  \n  switch (goal) {\n    case 'weight_loss':\n      return Math.round(idealWeight);\n    case 'maintenance':\n      return 0; // 현재 체중 유지\n    case 'muscle_gain':\n      return Math.round(idealWeight + 3); // 근육량 고려 3kg 추가\n    default:\n      return Math.round(idealWeight);\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}